
syntax = "proto3";
package auction.v1;

import "gogoproto/gogo.proto";
import "auction/v1/params.proto";
import "auction/v1/auction.proto";
import "google/api/annotations.proto";

option go_package = "github.com/Gravity-Bridge/Gravity-Bridge/module/x/auction/types";

// Query defines the gRPC querier service.
service Query {
    // Parameters queries the parameters of the module.
    rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
      option (google.api.http).get = "/auction/v1beta/params";
    }

    rpc LatestAuctionPeriod(QueryLatestAuctionPeriod) returns (QueryLatestAuctionPeriodResponse) {
      option (google.api.http).get = "/auction/v1beta/latest-auction-period";
    }

    rpc AuctionByAuctionId(QueryAuctionByAuctionId) returns (QueryAuctionByAuctionIdResponse) {
      option (google.api.http).get = "/auction/v1beta/auction/{auction_id}";
    }

    rpc AllAuctionsByBidder(QueryAllAuctionsByBidder) returns (QueryAllAuctionsByBidderResponse) {
      option (google.api.http).get = "/auction/v1beta/auctions-by-bidder/bidder/{address}";
    }

    rpc HighestBidByAuctionId(QueryHighestBidByAuctionId) returns (QueryHighestBidByAuctionIdResponse) {
      option (google.api.http).get = "/auction/v1beta/highest-bid/auction/{auction_id}";
    }
  }
  // QueryParamsRequest is request type for the Query/Params RPC method.
  message QueryParamsRequest {}
  
  // QueryParamsResponse is response type for the Query/Params RPC method.
  message QueryParamsResponse {
    // params holds all the parameters of this module.
    Params params = 1 [ (gogoproto.nullable) = false ];
  }

message QueryLatestAuctionPeriod {
}
message QueryLatestAuctionPeriodResponse {
  AuctionPeriod auction_period = 1;
}

message QueryAuctionByAuctionId{
  uint64 auction_id = 1;
}
message QueryAuctionByAuctionIdResponse {
  Auction auction = 1;
}

message QueryAllAuctionsByBidder{
  string address = 1;
}
message QueryAllAuctionsByBidderResponse {
  repeated Auction auctions = 1 [ (gogoproto.nullable) = false ];
}

message QueryHighestBidByAuctionId {
  uint64 auction_id = 1;
}
message QueryHighestBidByAuctionIdResponse {
  Bid bid = 1;
}