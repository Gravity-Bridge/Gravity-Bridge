// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gravity/v2/msgs.proto

package v2

import (
	context "context"
	fmt "fmt"
	types "github.com/Gravity-Bridge/Gravity-Bridge/module/x/gravity/types"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgIBCMetadataProposal
// This message is used by the new x/gov v1 proposal system, it contains an authority
// and the previous type used for proposals
// AUTHORITY
// A string containing the address of the sender, only valid if it is the gov module address
// PROPOSAL
// This is the previous proposal type, which contains everything needed for the proposal's execution
type MsgIBCMetadataProposal struct {
	Authority string                     `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	Proposal  *types.IBCMetadataProposal `protobuf:"bytes,2,opt,name=proposal,proto3" json:"proposal,omitempty"`
}

func (m *MsgIBCMetadataProposal) Reset()         { *m = MsgIBCMetadataProposal{} }
func (m *MsgIBCMetadataProposal) String() string { return proto.CompactTextString(m) }
func (*MsgIBCMetadataProposal) ProtoMessage()    {}
func (*MsgIBCMetadataProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_480c6bb410a9b91f, []int{0}
}
func (m *MsgIBCMetadataProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgIBCMetadataProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgIBCMetadataProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgIBCMetadataProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgIBCMetadataProposal.Merge(m, src)
}
func (m *MsgIBCMetadataProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgIBCMetadataProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgIBCMetadataProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgIBCMetadataProposal proto.InternalMessageInfo

func (m *MsgIBCMetadataProposal) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgIBCMetadataProposal) GetProposal() *types.IBCMetadataProposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

type MsgIBCMetadataProposalResponse struct {
}

func (m *MsgIBCMetadataProposalResponse) Reset()         { *m = MsgIBCMetadataProposalResponse{} }
func (m *MsgIBCMetadataProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgIBCMetadataProposalResponse) ProtoMessage()    {}
func (*MsgIBCMetadataProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_480c6bb410a9b91f, []int{1}
}
func (m *MsgIBCMetadataProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgIBCMetadataProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgIBCMetadataProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgIBCMetadataProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgIBCMetadataProposalResponse.Merge(m, src)
}
func (m *MsgIBCMetadataProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgIBCMetadataProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgIBCMetadataProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgIBCMetadataProposalResponse proto.InternalMessageInfo

// MsgAirdropProposal
// This message is used by the new x/gov v1 proposal system, it contains an authority
// and the previous type used for proposals
// AUTHORITY
// A string containing the address of the sender, only valid if it is the gov module address
// PROPOSAL
// This is the previous proposal type, which contains everything needed for the proposal's execution
type MsgAirdropProposal struct {
	Authority string                 `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	Proposal  *types.AirdropProposal `protobuf:"bytes,2,opt,name=proposal,proto3" json:"proposal,omitempty"`
}

func (m *MsgAirdropProposal) Reset()         { *m = MsgAirdropProposal{} }
func (m *MsgAirdropProposal) String() string { return proto.CompactTextString(m) }
func (*MsgAirdropProposal) ProtoMessage()    {}
func (*MsgAirdropProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_480c6bb410a9b91f, []int{2}
}
func (m *MsgAirdropProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAirdropProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAirdropProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAirdropProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAirdropProposal.Merge(m, src)
}
func (m *MsgAirdropProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgAirdropProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAirdropProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAirdropProposal proto.InternalMessageInfo

func (m *MsgAirdropProposal) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgAirdropProposal) GetProposal() *types.AirdropProposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

type MsgAirdropProposalResponse struct {
}

func (m *MsgAirdropProposalResponse) Reset()         { *m = MsgAirdropProposalResponse{} }
func (m *MsgAirdropProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAirdropProposalResponse) ProtoMessage()    {}
func (*MsgAirdropProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_480c6bb410a9b91f, []int{3}
}
func (m *MsgAirdropProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAirdropProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAirdropProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAirdropProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAirdropProposalResponse.Merge(m, src)
}
func (m *MsgAirdropProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAirdropProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAirdropProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAirdropProposalResponse proto.InternalMessageInfo

// MsgUnhaltBridgeProposal
// This message is used by the new x/gov v1 proposal system, it contains an authority
// and the previous type used for proposals
// AUTHORITY
// A string containing the address of the sender, only valid if it is the gov module address
// PROPOSAL
// This is the previous proposal type, which contains everything needed for the proposal's execution
type MsgUnhaltBridgeProposal struct {
	Authority string                      `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	Proposal  *types.UnhaltBridgeProposal `protobuf:"bytes,2,opt,name=proposal,proto3" json:"proposal,omitempty"`
}

func (m *MsgUnhaltBridgeProposal) Reset()         { *m = MsgUnhaltBridgeProposal{} }
func (m *MsgUnhaltBridgeProposal) String() string { return proto.CompactTextString(m) }
func (*MsgUnhaltBridgeProposal) ProtoMessage()    {}
func (*MsgUnhaltBridgeProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_480c6bb410a9b91f, []int{4}
}
func (m *MsgUnhaltBridgeProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnhaltBridgeProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnhaltBridgeProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnhaltBridgeProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnhaltBridgeProposal.Merge(m, src)
}
func (m *MsgUnhaltBridgeProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnhaltBridgeProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnhaltBridgeProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnhaltBridgeProposal proto.InternalMessageInfo

func (m *MsgUnhaltBridgeProposal) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUnhaltBridgeProposal) GetProposal() *types.UnhaltBridgeProposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

type MsgUnhaltBridgeProposalResponse struct {
}

func (m *MsgUnhaltBridgeProposalResponse) Reset()         { *m = MsgUnhaltBridgeProposalResponse{} }
func (m *MsgUnhaltBridgeProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUnhaltBridgeProposalResponse) ProtoMessage()    {}
func (*MsgUnhaltBridgeProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_480c6bb410a9b91f, []int{5}
}
func (m *MsgUnhaltBridgeProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnhaltBridgeProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnhaltBridgeProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnhaltBridgeProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnhaltBridgeProposalResponse.Merge(m, src)
}
func (m *MsgUnhaltBridgeProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnhaltBridgeProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnhaltBridgeProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnhaltBridgeProposalResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgIBCMetadataProposal)(nil), "gravity.v2.MsgIBCMetadataProposal")
	proto.RegisterType((*MsgIBCMetadataProposalResponse)(nil), "gravity.v2.MsgIBCMetadataProposalResponse")
	proto.RegisterType((*MsgAirdropProposal)(nil), "gravity.v2.MsgAirdropProposal")
	proto.RegisterType((*MsgAirdropProposalResponse)(nil), "gravity.v2.MsgAirdropProposalResponse")
	proto.RegisterType((*MsgUnhaltBridgeProposal)(nil), "gravity.v2.MsgUnhaltBridgeProposal")
	proto.RegisterType((*MsgUnhaltBridgeProposalResponse)(nil), "gravity.v2.MsgUnhaltBridgeProposalResponse")
}

func init() { proto.RegisterFile("gravity/v2/msgs.proto", fileDescriptor_480c6bb410a9b91f) }

var fileDescriptor_480c6bb410a9b91f = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x4f, 0x8b, 0xd3, 0x40,
	0x18, 0xc6, 0x3b, 0x2b, 0x8a, 0x3b, 0x82, 0x42, 0x5c, 0x77, 0xd7, 0xb1, 0xcc, 0xd6, 0x0a, 0xb2,
	0x54, 0xcc, 0x90, 0x78, 0x10, 0xd4, 0x8b, 0xf5, 0x20, 0x1e, 0x02, 0x52, 0xf0, 0xa2, 0x82, 0x4c,
	0xda, 0x71, 0x3a, 0xd2, 0xe4, 0x0d, 0x99, 0x69, 0x30, 0x78, 0x11, 0xc5, 0xbb, 0x1f, 0x65, 0x3f,
	0x81, 0x67, 0x8f, 0x7b, 0xf4, 0x28, 0xed, 0x61, 0xbf, 0x86, 0x6c, 0xfe, 0x96, 0x34, 0x76, 0x7b,
	0x4a, 0xe6, 0x7d, 0xde, 0x79, 0x9e, 0x1f, 0xf3, 0xf2, 0xe2, 0x5b, 0x32, 0xe6, 0x89, 0x32, 0x29,
	0x4b, 0x5c, 0x16, 0x68, 0xa9, 0xed, 0x28, 0x06, 0x03, 0x16, 0x2e, 0xca, 0x76, 0xe2, 0x12, 0x3a,
	0x06, 0x1d, 0x80, 0x66, 0x3e, 0xd7, 0x82, 0x25, 0x8e, 0x2f, 0x0c, 0x77, 0xd8, 0x18, 0x54, 0x98,
	0xf7, 0x92, 0x83, 0x42, 0x0f, 0xb4, 0x64, 0x89, 0x73, 0xfe, 0x29, 0x84, 0x3d, 0x09, 0x12, 0xb2,
	0x5f, 0x76, 0xfe, 0x57, 0x54, 0xbb, 0x12, 0x40, 0xce, 0x04, 0xe3, 0x91, 0x62, 0x3c, 0x0c, 0xc1,
	0x70, 0xa3, 0x20, 0x2c, 0x82, 0xc9, 0x7e, 0xc5, 0xe3, 0x30, 0x93, 0x46, 0xa2, 0xac, 0xdf, 0x2e,
	0x6e, 0x65, 0x27, 0x7f, 0xfe, 0x91, 0xf1, 0x30, 0x2d, 0xa5, 0x3c, 0xff, 0x43, 0x9e, 0x94, 0x1f,
	0x72, 0xa9, 0xff, 0x1d, 0xe1, 0x7d, 0x4f, 0xcb, 0x57, 0xc3, 0x17, 0x9e, 0x30, 0x7c, 0xc2, 0x0d,
	0x7f, 0x1d, 0x43, 0x04, 0x9a, 0xcf, 0xac, 0x2e, 0xde, 0xe5, 0x73, 0x33, 0x85, 0x58, 0x99, 0xf4,
	0x10, 0xf5, 0xd0, 0xf1, 0xee, 0xa8, 0x2e, 0x58, 0x4f, 0xf1, 0xd5, 0xa8, 0xe8, 0x3c, 0xdc, 0xe9,
	0xa1, 0xe3, 0x6b, 0xee, 0x91, 0x5d, 0x3d, 0x89, 0x63, 0xb7, 0x18, 0x8e, 0xaa, 0x0b, 0x4f, 0xae,
	0x7f, 0x3b, 0x3b, 0x19, 0xd4, 0x66, 0xfd, 0x1e, 0xa6, 0xed, 0x10, 0x23, 0xa1, 0x23, 0x08, 0xb5,
	0xe8, 0x7f, 0xc1, 0x96, 0xa7, 0xe5, 0x73, 0x15, 0x4f, 0x62, 0x88, 0xb6, 0x44, 0x7c, 0xbc, 0x86,
	0x78, 0x67, 0x15, 0xb1, 0x61, 0xb6, 0x01, 0xaf, 0x8b, 0xc9, 0x7a, 0x78, 0x85, 0xf6, 0x03, 0xe1,
	0x03, 0x4f, 0xcb, 0x37, 0xe1, 0x94, 0xcf, 0xcc, 0x30, 0x56, 0x13, 0x29, 0xb6, 0x04, 0x7c, 0xb6,
	0x06, 0xd8, 0x5b, 0x05, 0x6c, 0x73, 0xdc, 0x40, 0x79, 0x17, 0x1f, 0xfd, 0x07, 0xa3, 0x44, 0x75,
	0x7f, 0xed, 0xe0, 0x4b, 0x9e, 0x96, 0x96, 0xc4, 0x37, 0xdb, 0x26, 0xde, 0xaf, 0xd3, 0x5d, 0xbb,
	0x7d, 0x20, 0x64, 0x70, 0x71, 0x4f, 0xf5, 0x32, 0x1d, 0xeb, 0x1d, 0xbe, 0xd1, 0x9c, 0x19, 0x6d,
	0x18, 0x34, 0x74, 0x72, 0x7f, 0xb3, 0xbe, 0x62, 0xfe, 0x09, 0xef, 0xb5, 0x3e, 0xfa, 0xbd, 0x86,
	0x43, 0x5b, 0x13, 0x79, 0xb0, 0x45, 0x53, 0x9d, 0x45, 0x2e, 0x7f, 0x3d, 0x3b, 0x19, 0xa0, 0xe1,
	0xfb, 0xdf, 0x0b, 0x8a, 0x4e, 0x17, 0x14, 0xfd, 0x5d, 0x50, 0xf4, 0x73, 0x49, 0x3b, 0xa7, 0x4b,
	0xda, 0xf9, 0xb3, 0xa4, 0x9d, 0xb7, 0x43, 0xa9, 0xcc, 0x74, 0xee, 0xdb, 0x63, 0x08, 0xd8, 0xcb,
	0xdc, 0xf9, 0x61, 0xee, 0xd6, 0x3c, 0x06, 0x30, 0x99, 0xcf, 0x04, 0xfb, 0xcc, 0xca, 0x45, 0xce,
	0xb6, 0x98, 0x25, 0xae, 0x7f, 0x25, 0xdb, 0xc9, 0x47, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x80,
	0x75, 0x78, 0x9e, 0x73, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	IBCMetadataProposal(ctx context.Context, in *MsgIBCMetadataProposal, opts ...grpc.CallOption) (*MsgIBCMetadataProposalResponse, error)
	AirdropProposal(ctx context.Context, in *MsgAirdropProposal, opts ...grpc.CallOption) (*MsgAirdropProposalResponse, error)
	UnhaltBridgeProposal(ctx context.Context, in *MsgUnhaltBridgeProposal, opts ...grpc.CallOption) (*MsgUnhaltBridgeProposalResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) IBCMetadataProposal(ctx context.Context, in *MsgIBCMetadataProposal, opts ...grpc.CallOption) (*MsgIBCMetadataProposalResponse, error) {
	out := new(MsgIBCMetadataProposalResponse)
	err := c.cc.Invoke(ctx, "/gravity.v2.Msg/IBCMetadataProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AirdropProposal(ctx context.Context, in *MsgAirdropProposal, opts ...grpc.CallOption) (*MsgAirdropProposalResponse, error) {
	out := new(MsgAirdropProposalResponse)
	err := c.cc.Invoke(ctx, "/gravity.v2.Msg/AirdropProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UnhaltBridgeProposal(ctx context.Context, in *MsgUnhaltBridgeProposal, opts ...grpc.CallOption) (*MsgUnhaltBridgeProposalResponse, error) {
	out := new(MsgUnhaltBridgeProposalResponse)
	err := c.cc.Invoke(ctx, "/gravity.v2.Msg/UnhaltBridgeProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	IBCMetadataProposal(context.Context, *MsgIBCMetadataProposal) (*MsgIBCMetadataProposalResponse, error)
	AirdropProposal(context.Context, *MsgAirdropProposal) (*MsgAirdropProposalResponse, error)
	UnhaltBridgeProposal(context.Context, *MsgUnhaltBridgeProposal) (*MsgUnhaltBridgeProposalResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) IBCMetadataProposal(ctx context.Context, req *MsgIBCMetadataProposal) (*MsgIBCMetadataProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IBCMetadataProposal not implemented")
}
func (*UnimplementedMsgServer) AirdropProposal(ctx context.Context, req *MsgAirdropProposal) (*MsgAirdropProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AirdropProposal not implemented")
}
func (*UnimplementedMsgServer) UnhaltBridgeProposal(ctx context.Context, req *MsgUnhaltBridgeProposal) (*MsgUnhaltBridgeProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnhaltBridgeProposal not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_IBCMetadataProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgIBCMetadataProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).IBCMetadataProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gravity.v2.Msg/IBCMetadataProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).IBCMetadataProposal(ctx, req.(*MsgIBCMetadataProposal))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AirdropProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAirdropProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AirdropProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gravity.v2.Msg/AirdropProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AirdropProposal(ctx, req.(*MsgAirdropProposal))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UnhaltBridgeProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUnhaltBridgeProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UnhaltBridgeProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gravity.v2.Msg/UnhaltBridgeProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UnhaltBridgeProposal(ctx, req.(*MsgUnhaltBridgeProposal))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gravity.v2.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IBCMetadataProposal",
			Handler:    _Msg_IBCMetadataProposal_Handler,
		},
		{
			MethodName: "AirdropProposal",
			Handler:    _Msg_AirdropProposal_Handler,
		},
		{
			MethodName: "UnhaltBridgeProposal",
			Handler:    _Msg_UnhaltBridgeProposal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gravity/v2/msgs.proto",
}

func (m *MsgIBCMetadataProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgIBCMetadataProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgIBCMetadataProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Proposal != nil {
		{
			size, err := m.Proposal.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgs(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintMsgs(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgIBCMetadataProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgIBCMetadataProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgIBCMetadataProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAirdropProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAirdropProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAirdropProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Proposal != nil {
		{
			size, err := m.Proposal.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgs(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintMsgs(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAirdropProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAirdropProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAirdropProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUnhaltBridgeProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnhaltBridgeProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnhaltBridgeProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Proposal != nil {
		{
			size, err := m.Proposal.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgs(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintMsgs(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUnhaltBridgeProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnhaltBridgeProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnhaltBridgeProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintMsgs(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsgs(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgIBCMetadataProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovMsgs(uint64(l))
	}
	if m.Proposal != nil {
		l = m.Proposal.Size()
		n += 1 + l + sovMsgs(uint64(l))
	}
	return n
}

func (m *MsgIBCMetadataProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAirdropProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovMsgs(uint64(l))
	}
	if m.Proposal != nil {
		l = m.Proposal.Size()
		n += 1 + l + sovMsgs(uint64(l))
	}
	return n
}

func (m *MsgAirdropProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUnhaltBridgeProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovMsgs(uint64(l))
	}
	if m.Proposal != nil {
		l = m.Proposal.Size()
		n += 1 + l + sovMsgs(uint64(l))
	}
	return n
}

func (m *MsgUnhaltBridgeProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovMsgs(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsgs(x uint64) (n int) {
	return sovMsgs(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgIBCMetadataProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgs
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgIBCMetadataProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgIBCMetadataProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proposal", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgs
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Proposal == nil {
				m.Proposal = &types.IBCMetadataProposal{}
			}
			if err := m.Proposal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgs(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgs
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgIBCMetadataProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgs
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgIBCMetadataProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgIBCMetadataProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgs(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgs
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAirdropProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgs
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAirdropProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAirdropProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proposal", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgs
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Proposal == nil {
				m.Proposal = &types.AirdropProposal{}
			}
			if err := m.Proposal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgs(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgs
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAirdropProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgs
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAirdropProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAirdropProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgs(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgs
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnhaltBridgeProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgs
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnhaltBridgeProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnhaltBridgeProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proposal", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgs
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Proposal == nil {
				m.Proposal = &types.UnhaltBridgeProposal{}
			}
			if err := m.Proposal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgs(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgs
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnhaltBridgeProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgs
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnhaltBridgeProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnhaltBridgeProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgs(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgs
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsgs(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsgs
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgs
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgs
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsgs
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMsgs
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMsgs
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMsgs        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsgs          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMsgs = fmt.Errorf("proto: unexpected end of group")
)
