// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package gravityv2

import (
	v1 "github.com/Gravity-Bridge/Gravity-Bridge/module/api/gravity/v1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_QueryPendingSendToEthV2 protoreflect.MessageDescriptor
)

func init() {
	file_gravity_v2_query_proto_init()
	md_QueryPendingSendToEthV2 = File_gravity_v2_query_proto.Messages().ByName("QueryPendingSendToEthV2")
}

var _ protoreflect.Message = (*fastReflection_QueryPendingSendToEthV2)(nil)

type fastReflection_QueryPendingSendToEthV2 QueryPendingSendToEthV2

func (x *QueryPendingSendToEthV2) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryPendingSendToEthV2)(x)
}

func (x *QueryPendingSendToEthV2) slowProtoReflect() protoreflect.Message {
	mi := &file_gravity_v2_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryPendingSendToEthV2_messageType fastReflection_QueryPendingSendToEthV2_messageType
var _ protoreflect.MessageType = fastReflection_QueryPendingSendToEthV2_messageType{}

type fastReflection_QueryPendingSendToEthV2_messageType struct{}

func (x fastReflection_QueryPendingSendToEthV2_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryPendingSendToEthV2)(nil)
}
func (x fastReflection_QueryPendingSendToEthV2_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryPendingSendToEthV2)
}
func (x fastReflection_QueryPendingSendToEthV2_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryPendingSendToEthV2
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryPendingSendToEthV2) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryPendingSendToEthV2
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryPendingSendToEthV2) Type() protoreflect.MessageType {
	return _fastReflection_QueryPendingSendToEthV2_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryPendingSendToEthV2) New() protoreflect.Message {
	return new(fastReflection_QueryPendingSendToEthV2)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryPendingSendToEthV2) Interface() protoreflect.ProtoMessage {
	return (*QueryPendingSendToEthV2)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryPendingSendToEthV2) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryPendingSendToEthV2) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2 does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2 does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryPendingSendToEthV2) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2 does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2 does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2 does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryPendingSendToEthV2) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2 does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryPendingSendToEthV2) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in gravity.v2.QueryPendingSendToEthV2", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryPendingSendToEthV2) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryPendingSendToEthV2) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryPendingSendToEthV2) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryPendingSendToEthV2)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryPendingSendToEthV2)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryPendingSendToEthV2)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryPendingSendToEthV2: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryPendingSendToEthV2: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryPendingSendToEthV2Response_1_list)(nil)

type _QueryPendingSendToEthV2Response_1_list struct {
	list *[]*OutgoingTransferAndBatch
}

func (x *_QueryPendingSendToEthV2Response_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryPendingSendToEthV2Response_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryPendingSendToEthV2Response_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OutgoingTransferAndBatch)
	(*x.list)[i] = concreteValue
}

func (x *_QueryPendingSendToEthV2Response_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OutgoingTransferAndBatch)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryPendingSendToEthV2Response_1_list) AppendMutable() protoreflect.Value {
	v := new(OutgoingTransferAndBatch)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryPendingSendToEthV2Response_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryPendingSendToEthV2Response_1_list) NewElement() protoreflect.Value {
	v := new(OutgoingTransferAndBatch)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryPendingSendToEthV2Response_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_QueryPendingSendToEthV2Response_2_list)(nil)

type _QueryPendingSendToEthV2Response_2_list struct {
	list *[]*v1.OutgoingTransferTx
}

func (x *_QueryPendingSendToEthV2Response_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryPendingSendToEthV2Response_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryPendingSendToEthV2Response_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1.OutgoingTransferTx)
	(*x.list)[i] = concreteValue
}

func (x *_QueryPendingSendToEthV2Response_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1.OutgoingTransferTx)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryPendingSendToEthV2Response_2_list) AppendMutable() protoreflect.Value {
	v := new(v1.OutgoingTransferTx)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryPendingSendToEthV2Response_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryPendingSendToEthV2Response_2_list) NewElement() protoreflect.Value {
	v := new(v1.OutgoingTransferTx)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryPendingSendToEthV2Response_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryPendingSendToEthV2Response                      protoreflect.MessageDescriptor
	fd_QueryPendingSendToEthV2Response_transfers_in_batches protoreflect.FieldDescriptor
	fd_QueryPendingSendToEthV2Response_unbatched_transfers  protoreflect.FieldDescriptor
)

func init() {
	file_gravity_v2_query_proto_init()
	md_QueryPendingSendToEthV2Response = File_gravity_v2_query_proto.Messages().ByName("QueryPendingSendToEthV2Response")
	fd_QueryPendingSendToEthV2Response_transfers_in_batches = md_QueryPendingSendToEthV2Response.Fields().ByName("transfers_in_batches")
	fd_QueryPendingSendToEthV2Response_unbatched_transfers = md_QueryPendingSendToEthV2Response.Fields().ByName("unbatched_transfers")
}

var _ protoreflect.Message = (*fastReflection_QueryPendingSendToEthV2Response)(nil)

type fastReflection_QueryPendingSendToEthV2Response QueryPendingSendToEthV2Response

func (x *QueryPendingSendToEthV2Response) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryPendingSendToEthV2Response)(x)
}

func (x *QueryPendingSendToEthV2Response) slowProtoReflect() protoreflect.Message {
	mi := &file_gravity_v2_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryPendingSendToEthV2Response_messageType fastReflection_QueryPendingSendToEthV2Response_messageType
var _ protoreflect.MessageType = fastReflection_QueryPendingSendToEthV2Response_messageType{}

type fastReflection_QueryPendingSendToEthV2Response_messageType struct{}

func (x fastReflection_QueryPendingSendToEthV2Response_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryPendingSendToEthV2Response)(nil)
}
func (x fastReflection_QueryPendingSendToEthV2Response_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryPendingSendToEthV2Response)
}
func (x fastReflection_QueryPendingSendToEthV2Response_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryPendingSendToEthV2Response
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryPendingSendToEthV2Response) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryPendingSendToEthV2Response
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryPendingSendToEthV2Response) Type() protoreflect.MessageType {
	return _fastReflection_QueryPendingSendToEthV2Response_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryPendingSendToEthV2Response) New() protoreflect.Message {
	return new(fastReflection_QueryPendingSendToEthV2Response)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryPendingSendToEthV2Response) Interface() protoreflect.ProtoMessage {
	return (*QueryPendingSendToEthV2Response)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryPendingSendToEthV2Response) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.TransfersInBatches) != 0 {
		value := protoreflect.ValueOfList(&_QueryPendingSendToEthV2Response_1_list{list: &x.TransfersInBatches})
		if !f(fd_QueryPendingSendToEthV2Response_transfers_in_batches, value) {
			return
		}
	}
	if len(x.UnbatchedTransfers) != 0 {
		value := protoreflect.ValueOfList(&_QueryPendingSendToEthV2Response_2_list{list: &x.UnbatchedTransfers})
		if !f(fd_QueryPendingSendToEthV2Response_unbatched_transfers, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryPendingSendToEthV2Response) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2Response.transfers_in_batches":
		return len(x.TransfersInBatches) != 0
	case "gravity.v2.QueryPendingSendToEthV2Response.unbatched_transfers":
		return len(x.UnbatchedTransfers) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2Response"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2Response does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2Response) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2Response.transfers_in_batches":
		x.TransfersInBatches = nil
	case "gravity.v2.QueryPendingSendToEthV2Response.unbatched_transfers":
		x.UnbatchedTransfers = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2Response"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2Response does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryPendingSendToEthV2Response) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2Response.transfers_in_batches":
		if len(x.TransfersInBatches) == 0 {
			return protoreflect.ValueOfList(&_QueryPendingSendToEthV2Response_1_list{})
		}
		listValue := &_QueryPendingSendToEthV2Response_1_list{list: &x.TransfersInBatches}
		return protoreflect.ValueOfList(listValue)
	case "gravity.v2.QueryPendingSendToEthV2Response.unbatched_transfers":
		if len(x.UnbatchedTransfers) == 0 {
			return protoreflect.ValueOfList(&_QueryPendingSendToEthV2Response_2_list{})
		}
		listValue := &_QueryPendingSendToEthV2Response_2_list{list: &x.UnbatchedTransfers}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2Response"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2Response does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2Response) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2Response.transfers_in_batches":
		lv := value.List()
		clv := lv.(*_QueryPendingSendToEthV2Response_1_list)
		x.TransfersInBatches = *clv.list
	case "gravity.v2.QueryPendingSendToEthV2Response.unbatched_transfers":
		lv := value.List()
		clv := lv.(*_QueryPendingSendToEthV2Response_2_list)
		x.UnbatchedTransfers = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2Response"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2Response does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2Response) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2Response.transfers_in_batches":
		if x.TransfersInBatches == nil {
			x.TransfersInBatches = []*OutgoingTransferAndBatch{}
		}
		value := &_QueryPendingSendToEthV2Response_1_list{list: &x.TransfersInBatches}
		return protoreflect.ValueOfList(value)
	case "gravity.v2.QueryPendingSendToEthV2Response.unbatched_transfers":
		if x.UnbatchedTransfers == nil {
			x.UnbatchedTransfers = []*v1.OutgoingTransferTx{}
		}
		value := &_QueryPendingSendToEthV2Response_2_list{list: &x.UnbatchedTransfers}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2Response"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2Response does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryPendingSendToEthV2Response) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2Response.transfers_in_batches":
		list := []*OutgoingTransferAndBatch{}
		return protoreflect.ValueOfList(&_QueryPendingSendToEthV2Response_1_list{list: &list})
	case "gravity.v2.QueryPendingSendToEthV2Response.unbatched_transfers":
		list := []*v1.OutgoingTransferTx{}
		return protoreflect.ValueOfList(&_QueryPendingSendToEthV2Response_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2Response"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2Response does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryPendingSendToEthV2Response) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in gravity.v2.QueryPendingSendToEthV2Response", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryPendingSendToEthV2Response) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2Response) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryPendingSendToEthV2Response) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryPendingSendToEthV2Response) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryPendingSendToEthV2Response)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.TransfersInBatches) > 0 {
			for _, e := range x.TransfersInBatches {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.UnbatchedTransfers) > 0 {
			for _, e := range x.UnbatchedTransfers {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryPendingSendToEthV2Response)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.UnbatchedTransfers) > 0 {
			for iNdEx := len(x.UnbatchedTransfers) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.UnbatchedTransfers[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.TransfersInBatches) > 0 {
			for iNdEx := len(x.TransfersInBatches) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TransfersInBatches[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryPendingSendToEthV2Response)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryPendingSendToEthV2Response: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryPendingSendToEthV2Response: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransfersInBatches", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TransfersInBatches = append(x.TransfersInBatches, &OutgoingTransferAndBatch{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TransfersInBatches[len(x.TransfersInBatches)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnbatchedTransfers", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UnbatchedTransfers = append(x.UnbatchedTransfers, &v1.OutgoingTransferTx{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.UnbatchedTransfers[len(x.UnbatchedTransfers)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryPendingSendToEthV2BySender        protoreflect.MessageDescriptor
	fd_QueryPendingSendToEthV2BySender_sender protoreflect.FieldDescriptor
)

func init() {
	file_gravity_v2_query_proto_init()
	md_QueryPendingSendToEthV2BySender = File_gravity_v2_query_proto.Messages().ByName("QueryPendingSendToEthV2BySender")
	fd_QueryPendingSendToEthV2BySender_sender = md_QueryPendingSendToEthV2BySender.Fields().ByName("sender")
}

var _ protoreflect.Message = (*fastReflection_QueryPendingSendToEthV2BySender)(nil)

type fastReflection_QueryPendingSendToEthV2BySender QueryPendingSendToEthV2BySender

func (x *QueryPendingSendToEthV2BySender) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryPendingSendToEthV2BySender)(x)
}

func (x *QueryPendingSendToEthV2BySender) slowProtoReflect() protoreflect.Message {
	mi := &file_gravity_v2_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryPendingSendToEthV2BySender_messageType fastReflection_QueryPendingSendToEthV2BySender_messageType
var _ protoreflect.MessageType = fastReflection_QueryPendingSendToEthV2BySender_messageType{}

type fastReflection_QueryPendingSendToEthV2BySender_messageType struct{}

func (x fastReflection_QueryPendingSendToEthV2BySender_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryPendingSendToEthV2BySender)(nil)
}
func (x fastReflection_QueryPendingSendToEthV2BySender_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryPendingSendToEthV2BySender)
}
func (x fastReflection_QueryPendingSendToEthV2BySender_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryPendingSendToEthV2BySender
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryPendingSendToEthV2BySender) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryPendingSendToEthV2BySender
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryPendingSendToEthV2BySender) Type() protoreflect.MessageType {
	return _fastReflection_QueryPendingSendToEthV2BySender_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryPendingSendToEthV2BySender) New() protoreflect.Message {
	return new(fastReflection_QueryPendingSendToEthV2BySender)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryPendingSendToEthV2BySender) Interface() protoreflect.ProtoMessage {
	return (*QueryPendingSendToEthV2BySender)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryPendingSendToEthV2BySender) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_QueryPendingSendToEthV2BySender_sender, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryPendingSendToEthV2BySender) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2BySender.sender":
		return x.Sender != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2BySender"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2BySender does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2BySender) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2BySender.sender":
		x.Sender = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2BySender"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2BySender does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryPendingSendToEthV2BySender) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2BySender.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2BySender"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2BySender does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2BySender) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2BySender.sender":
		x.Sender = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2BySender"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2BySender does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2BySender) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2BySender.sender":
		panic(fmt.Errorf("field sender of message gravity.v2.QueryPendingSendToEthV2BySender is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2BySender"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2BySender does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryPendingSendToEthV2BySender) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2BySender.sender":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2BySender"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2BySender does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryPendingSendToEthV2BySender) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in gravity.v2.QueryPendingSendToEthV2BySender", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryPendingSendToEthV2BySender) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2BySender) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryPendingSendToEthV2BySender) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryPendingSendToEthV2BySender) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryPendingSendToEthV2BySender)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryPendingSendToEthV2BySender)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryPendingSendToEthV2BySender)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryPendingSendToEthV2BySender: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryPendingSendToEthV2BySender: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryPendingSendToEthV2BySenderResponse_1_list)(nil)

type _QueryPendingSendToEthV2BySenderResponse_1_list struct {
	list *[]*OutgoingTransferAndBatch
}

func (x *_QueryPendingSendToEthV2BySenderResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryPendingSendToEthV2BySenderResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryPendingSendToEthV2BySenderResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OutgoingTransferAndBatch)
	(*x.list)[i] = concreteValue
}

func (x *_QueryPendingSendToEthV2BySenderResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OutgoingTransferAndBatch)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryPendingSendToEthV2BySenderResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(OutgoingTransferAndBatch)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryPendingSendToEthV2BySenderResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryPendingSendToEthV2BySenderResponse_1_list) NewElement() protoreflect.Value {
	v := new(OutgoingTransferAndBatch)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryPendingSendToEthV2BySenderResponse_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_QueryPendingSendToEthV2BySenderResponse_2_list)(nil)

type _QueryPendingSendToEthV2BySenderResponse_2_list struct {
	list *[]*v1.OutgoingTransferTx
}

func (x *_QueryPendingSendToEthV2BySenderResponse_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryPendingSendToEthV2BySenderResponse_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryPendingSendToEthV2BySenderResponse_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1.OutgoingTransferTx)
	(*x.list)[i] = concreteValue
}

func (x *_QueryPendingSendToEthV2BySenderResponse_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1.OutgoingTransferTx)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryPendingSendToEthV2BySenderResponse_2_list) AppendMutable() protoreflect.Value {
	v := new(v1.OutgoingTransferTx)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryPendingSendToEthV2BySenderResponse_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryPendingSendToEthV2BySenderResponse_2_list) NewElement() protoreflect.Value {
	v := new(v1.OutgoingTransferTx)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryPendingSendToEthV2BySenderResponse_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryPendingSendToEthV2BySenderResponse                      protoreflect.MessageDescriptor
	fd_QueryPendingSendToEthV2BySenderResponse_transfers_in_batches protoreflect.FieldDescriptor
	fd_QueryPendingSendToEthV2BySenderResponse_unbatched_transfers  protoreflect.FieldDescriptor
)

func init() {
	file_gravity_v2_query_proto_init()
	md_QueryPendingSendToEthV2BySenderResponse = File_gravity_v2_query_proto.Messages().ByName("QueryPendingSendToEthV2BySenderResponse")
	fd_QueryPendingSendToEthV2BySenderResponse_transfers_in_batches = md_QueryPendingSendToEthV2BySenderResponse.Fields().ByName("transfers_in_batches")
	fd_QueryPendingSendToEthV2BySenderResponse_unbatched_transfers = md_QueryPendingSendToEthV2BySenderResponse.Fields().ByName("unbatched_transfers")
}

var _ protoreflect.Message = (*fastReflection_QueryPendingSendToEthV2BySenderResponse)(nil)

type fastReflection_QueryPendingSendToEthV2BySenderResponse QueryPendingSendToEthV2BySenderResponse

func (x *QueryPendingSendToEthV2BySenderResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryPendingSendToEthV2BySenderResponse)(x)
}

func (x *QueryPendingSendToEthV2BySenderResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_gravity_v2_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryPendingSendToEthV2BySenderResponse_messageType fastReflection_QueryPendingSendToEthV2BySenderResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryPendingSendToEthV2BySenderResponse_messageType{}

type fastReflection_QueryPendingSendToEthV2BySenderResponse_messageType struct{}

func (x fastReflection_QueryPendingSendToEthV2BySenderResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryPendingSendToEthV2BySenderResponse)(nil)
}
func (x fastReflection_QueryPendingSendToEthV2BySenderResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryPendingSendToEthV2BySenderResponse)
}
func (x fastReflection_QueryPendingSendToEthV2BySenderResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryPendingSendToEthV2BySenderResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryPendingSendToEthV2BySenderResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryPendingSendToEthV2BySenderResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) New() protoreflect.Message {
	return new(fastReflection_QueryPendingSendToEthV2BySenderResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryPendingSendToEthV2BySenderResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.TransfersInBatches) != 0 {
		value := protoreflect.ValueOfList(&_QueryPendingSendToEthV2BySenderResponse_1_list{list: &x.TransfersInBatches})
		if !f(fd_QueryPendingSendToEthV2BySenderResponse_transfers_in_batches, value) {
			return
		}
	}
	if len(x.UnbatchedTransfers) != 0 {
		value := protoreflect.ValueOfList(&_QueryPendingSendToEthV2BySenderResponse_2_list{list: &x.UnbatchedTransfers})
		if !f(fd_QueryPendingSendToEthV2BySenderResponse_unbatched_transfers, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2BySenderResponse.transfers_in_batches":
		return len(x.TransfersInBatches) != 0
	case "gravity.v2.QueryPendingSendToEthV2BySenderResponse.unbatched_transfers":
		return len(x.UnbatchedTransfers) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2BySenderResponse"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2BySenderResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2BySenderResponse.transfers_in_batches":
		x.TransfersInBatches = nil
	case "gravity.v2.QueryPendingSendToEthV2BySenderResponse.unbatched_transfers":
		x.UnbatchedTransfers = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2BySenderResponse"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2BySenderResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2BySenderResponse.transfers_in_batches":
		if len(x.TransfersInBatches) == 0 {
			return protoreflect.ValueOfList(&_QueryPendingSendToEthV2BySenderResponse_1_list{})
		}
		listValue := &_QueryPendingSendToEthV2BySenderResponse_1_list{list: &x.TransfersInBatches}
		return protoreflect.ValueOfList(listValue)
	case "gravity.v2.QueryPendingSendToEthV2BySenderResponse.unbatched_transfers":
		if len(x.UnbatchedTransfers) == 0 {
			return protoreflect.ValueOfList(&_QueryPendingSendToEthV2BySenderResponse_2_list{})
		}
		listValue := &_QueryPendingSendToEthV2BySenderResponse_2_list{list: &x.UnbatchedTransfers}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2BySenderResponse"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2BySenderResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2BySenderResponse.transfers_in_batches":
		lv := value.List()
		clv := lv.(*_QueryPendingSendToEthV2BySenderResponse_1_list)
		x.TransfersInBatches = *clv.list
	case "gravity.v2.QueryPendingSendToEthV2BySenderResponse.unbatched_transfers":
		lv := value.List()
		clv := lv.(*_QueryPendingSendToEthV2BySenderResponse_2_list)
		x.UnbatchedTransfers = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2BySenderResponse"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2BySenderResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2BySenderResponse.transfers_in_batches":
		if x.TransfersInBatches == nil {
			x.TransfersInBatches = []*OutgoingTransferAndBatch{}
		}
		value := &_QueryPendingSendToEthV2BySenderResponse_1_list{list: &x.TransfersInBatches}
		return protoreflect.ValueOfList(value)
	case "gravity.v2.QueryPendingSendToEthV2BySenderResponse.unbatched_transfers":
		if x.UnbatchedTransfers == nil {
			x.UnbatchedTransfers = []*v1.OutgoingTransferTx{}
		}
		value := &_QueryPendingSendToEthV2BySenderResponse_2_list{list: &x.UnbatchedTransfers}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2BySenderResponse"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2BySenderResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v2.QueryPendingSendToEthV2BySenderResponse.transfers_in_batches":
		list := []*OutgoingTransferAndBatch{}
		return protoreflect.ValueOfList(&_QueryPendingSendToEthV2BySenderResponse_1_list{list: &list})
	case "gravity.v2.QueryPendingSendToEthV2BySenderResponse.unbatched_transfers":
		list := []*v1.OutgoingTransferTx{}
		return protoreflect.ValueOfList(&_QueryPendingSendToEthV2BySenderResponse_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryPendingSendToEthV2BySenderResponse"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryPendingSendToEthV2BySenderResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in gravity.v2.QueryPendingSendToEthV2BySenderResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryPendingSendToEthV2BySenderResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryPendingSendToEthV2BySenderResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.TransfersInBatches) > 0 {
			for _, e := range x.TransfersInBatches {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.UnbatchedTransfers) > 0 {
			for _, e := range x.UnbatchedTransfers {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryPendingSendToEthV2BySenderResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.UnbatchedTransfers) > 0 {
			for iNdEx := len(x.UnbatchedTransfers) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.UnbatchedTransfers[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.TransfersInBatches) > 0 {
			for iNdEx := len(x.TransfersInBatches) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TransfersInBatches[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryPendingSendToEthV2BySenderResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryPendingSendToEthV2BySenderResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryPendingSendToEthV2BySenderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransfersInBatches", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TransfersInBatches = append(x.TransfersInBatches, &OutgoingTransferAndBatch{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TransfersInBatches[len(x.TransfersInBatches)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnbatchedTransfers", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UnbatchedTransfers = append(x.UnbatchedTransfers, &v1.OutgoingTransferTx{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.UnbatchedTransfers[len(x.UnbatchedTransfers)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryOutgoingTxBatchesByAddrRequest         protoreflect.MessageDescriptor
	fd_QueryOutgoingTxBatchesByAddrRequest_address protoreflect.FieldDescriptor
)

func init() {
	file_gravity_v2_query_proto_init()
	md_QueryOutgoingTxBatchesByAddrRequest = File_gravity_v2_query_proto.Messages().ByName("QueryOutgoingTxBatchesByAddrRequest")
	fd_QueryOutgoingTxBatchesByAddrRequest_address = md_QueryOutgoingTxBatchesByAddrRequest.Fields().ByName("address")
}

var _ protoreflect.Message = (*fastReflection_QueryOutgoingTxBatchesByAddrRequest)(nil)

type fastReflection_QueryOutgoingTxBatchesByAddrRequest QueryOutgoingTxBatchesByAddrRequest

func (x *QueryOutgoingTxBatchesByAddrRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryOutgoingTxBatchesByAddrRequest)(x)
}

func (x *QueryOutgoingTxBatchesByAddrRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_gravity_v2_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryOutgoingTxBatchesByAddrRequest_messageType fastReflection_QueryOutgoingTxBatchesByAddrRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryOutgoingTxBatchesByAddrRequest_messageType{}

type fastReflection_QueryOutgoingTxBatchesByAddrRequest_messageType struct{}

func (x fastReflection_QueryOutgoingTxBatchesByAddrRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryOutgoingTxBatchesByAddrRequest)(nil)
}
func (x fastReflection_QueryOutgoingTxBatchesByAddrRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryOutgoingTxBatchesByAddrRequest)
}
func (x fastReflection_QueryOutgoingTxBatchesByAddrRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryOutgoingTxBatchesByAddrRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryOutgoingTxBatchesByAddrRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryOutgoingTxBatchesByAddrRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) New() protoreflect.Message {
	return new(fastReflection_QueryOutgoingTxBatchesByAddrRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryOutgoingTxBatchesByAddrRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_QueryOutgoingTxBatchesByAddrRequest_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "gravity.v2.QueryOutgoingTxBatchesByAddrRequest.address":
		return x.Address != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryOutgoingTxBatchesByAddrRequest"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryOutgoingTxBatchesByAddrRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "gravity.v2.QueryOutgoingTxBatchesByAddrRequest.address":
		x.Address = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryOutgoingTxBatchesByAddrRequest"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryOutgoingTxBatchesByAddrRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "gravity.v2.QueryOutgoingTxBatchesByAddrRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryOutgoingTxBatchesByAddrRequest"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryOutgoingTxBatchesByAddrRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "gravity.v2.QueryOutgoingTxBatchesByAddrRequest.address":
		x.Address = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryOutgoingTxBatchesByAddrRequest"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryOutgoingTxBatchesByAddrRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v2.QueryOutgoingTxBatchesByAddrRequest.address":
		panic(fmt.Errorf("field address of message gravity.v2.QueryOutgoingTxBatchesByAddrRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryOutgoingTxBatchesByAddrRequest"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryOutgoingTxBatchesByAddrRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v2.QueryOutgoingTxBatchesByAddrRequest.address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryOutgoingTxBatchesByAddrRequest"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryOutgoingTxBatchesByAddrRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in gravity.v2.QueryOutgoingTxBatchesByAddrRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryOutgoingTxBatchesByAddrRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryOutgoingTxBatchesByAddrRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryOutgoingTxBatchesByAddrRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryOutgoingTxBatchesByAddrRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryOutgoingTxBatchesByAddrRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryOutgoingTxBatchesByAddrResponse_1_list)(nil)

type _QueryOutgoingTxBatchesByAddrResponse_1_list struct {
	list *[]*v1.OutgoingTxBatch
}

func (x *_QueryOutgoingTxBatchesByAddrResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryOutgoingTxBatchesByAddrResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryOutgoingTxBatchesByAddrResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1.OutgoingTxBatch)
	(*x.list)[i] = concreteValue
}

func (x *_QueryOutgoingTxBatchesByAddrResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1.OutgoingTxBatch)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryOutgoingTxBatchesByAddrResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(v1.OutgoingTxBatch)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryOutgoingTxBatchesByAddrResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryOutgoingTxBatchesByAddrResponse_1_list) NewElement() protoreflect.Value {
	v := new(v1.OutgoingTxBatch)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryOutgoingTxBatchesByAddrResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryOutgoingTxBatchesByAddrResponse         protoreflect.MessageDescriptor
	fd_QueryOutgoingTxBatchesByAddrResponse_batches protoreflect.FieldDescriptor
)

func init() {
	file_gravity_v2_query_proto_init()
	md_QueryOutgoingTxBatchesByAddrResponse = File_gravity_v2_query_proto.Messages().ByName("QueryOutgoingTxBatchesByAddrResponse")
	fd_QueryOutgoingTxBatchesByAddrResponse_batches = md_QueryOutgoingTxBatchesByAddrResponse.Fields().ByName("batches")
}

var _ protoreflect.Message = (*fastReflection_QueryOutgoingTxBatchesByAddrResponse)(nil)

type fastReflection_QueryOutgoingTxBatchesByAddrResponse QueryOutgoingTxBatchesByAddrResponse

func (x *QueryOutgoingTxBatchesByAddrResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryOutgoingTxBatchesByAddrResponse)(x)
}

func (x *QueryOutgoingTxBatchesByAddrResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_gravity_v2_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryOutgoingTxBatchesByAddrResponse_messageType fastReflection_QueryOutgoingTxBatchesByAddrResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryOutgoingTxBatchesByAddrResponse_messageType{}

type fastReflection_QueryOutgoingTxBatchesByAddrResponse_messageType struct{}

func (x fastReflection_QueryOutgoingTxBatchesByAddrResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryOutgoingTxBatchesByAddrResponse)(nil)
}
func (x fastReflection_QueryOutgoingTxBatchesByAddrResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryOutgoingTxBatchesByAddrResponse)
}
func (x fastReflection_QueryOutgoingTxBatchesByAddrResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryOutgoingTxBatchesByAddrResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryOutgoingTxBatchesByAddrResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryOutgoingTxBatchesByAddrResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) New() protoreflect.Message {
	return new(fastReflection_QueryOutgoingTxBatchesByAddrResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryOutgoingTxBatchesByAddrResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Batches) != 0 {
		value := protoreflect.ValueOfList(&_QueryOutgoingTxBatchesByAddrResponse_1_list{list: &x.Batches})
		if !f(fd_QueryOutgoingTxBatchesByAddrResponse_batches, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "gravity.v2.QueryOutgoingTxBatchesByAddrResponse.batches":
		return len(x.Batches) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryOutgoingTxBatchesByAddrResponse"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryOutgoingTxBatchesByAddrResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "gravity.v2.QueryOutgoingTxBatchesByAddrResponse.batches":
		x.Batches = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryOutgoingTxBatchesByAddrResponse"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryOutgoingTxBatchesByAddrResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "gravity.v2.QueryOutgoingTxBatchesByAddrResponse.batches":
		if len(x.Batches) == 0 {
			return protoreflect.ValueOfList(&_QueryOutgoingTxBatchesByAddrResponse_1_list{})
		}
		listValue := &_QueryOutgoingTxBatchesByAddrResponse_1_list{list: &x.Batches}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryOutgoingTxBatchesByAddrResponse"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryOutgoingTxBatchesByAddrResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "gravity.v2.QueryOutgoingTxBatchesByAddrResponse.batches":
		lv := value.List()
		clv := lv.(*_QueryOutgoingTxBatchesByAddrResponse_1_list)
		x.Batches = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryOutgoingTxBatchesByAddrResponse"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryOutgoingTxBatchesByAddrResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v2.QueryOutgoingTxBatchesByAddrResponse.batches":
		if x.Batches == nil {
			x.Batches = []*v1.OutgoingTxBatch{}
		}
		value := &_QueryOutgoingTxBatchesByAddrResponse_1_list{list: &x.Batches}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryOutgoingTxBatchesByAddrResponse"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryOutgoingTxBatchesByAddrResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v2.QueryOutgoingTxBatchesByAddrResponse.batches":
		list := []*v1.OutgoingTxBatch{}
		return protoreflect.ValueOfList(&_QueryOutgoingTxBatchesByAddrResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v2.QueryOutgoingTxBatchesByAddrResponse"))
		}
		panic(fmt.Errorf("message gravity.v2.QueryOutgoingTxBatchesByAddrResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in gravity.v2.QueryOutgoingTxBatchesByAddrResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryOutgoingTxBatchesByAddrResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryOutgoingTxBatchesByAddrResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Batches) > 0 {
			for _, e := range x.Batches {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryOutgoingTxBatchesByAddrResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Batches) > 0 {
			for iNdEx := len(x.Batches) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Batches[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryOutgoingTxBatchesByAddrResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryOutgoingTxBatchesByAddrResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryOutgoingTxBatchesByAddrResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Batches", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Batches = append(x.Batches, &v1.OutgoingTxBatch{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Batches[len(x.Batches)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: gravity/v2/query.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryPendingSendToEthV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryPendingSendToEthV2) Reset() {
	*x = QueryPendingSendToEthV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gravity_v2_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPendingSendToEthV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPendingSendToEthV2) ProtoMessage() {}

// Deprecated: Use QueryPendingSendToEthV2.ProtoReflect.Descriptor instead.
func (*QueryPendingSendToEthV2) Descriptor() ([]byte, []int) {
	return file_gravity_v2_query_proto_rawDescGZIP(), []int{0}
}

type QueryPendingSendToEthV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransfersInBatches []*OutgoingTransferAndBatch `protobuf:"bytes,1,rep,name=transfers_in_batches,json=transfersInBatches,proto3" json:"transfers_in_batches,omitempty"`
	UnbatchedTransfers []*v1.OutgoingTransferTx    `protobuf:"bytes,2,rep,name=unbatched_transfers,json=unbatchedTransfers,proto3" json:"unbatched_transfers,omitempty"`
}

func (x *QueryPendingSendToEthV2Response) Reset() {
	*x = QueryPendingSendToEthV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gravity_v2_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPendingSendToEthV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPendingSendToEthV2Response) ProtoMessage() {}

// Deprecated: Use QueryPendingSendToEthV2Response.ProtoReflect.Descriptor instead.
func (*QueryPendingSendToEthV2Response) Descriptor() ([]byte, []int) {
	return file_gravity_v2_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryPendingSendToEthV2Response) GetTransfersInBatches() []*OutgoingTransferAndBatch {
	if x != nil {
		return x.TransfersInBatches
	}
	return nil
}

func (x *QueryPendingSendToEthV2Response) GetUnbatchedTransfers() []*v1.OutgoingTransferTx {
	if x != nil {
		return x.UnbatchedTransfers
	}
	return nil
}

type QueryPendingSendToEthV2BySender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *QueryPendingSendToEthV2BySender) Reset() {
	*x = QueryPendingSendToEthV2BySender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gravity_v2_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPendingSendToEthV2BySender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPendingSendToEthV2BySender) ProtoMessage() {}

// Deprecated: Use QueryPendingSendToEthV2BySender.ProtoReflect.Descriptor instead.
func (*QueryPendingSendToEthV2BySender) Descriptor() ([]byte, []int) {
	return file_gravity_v2_query_proto_rawDescGZIP(), []int{2}
}

func (x *QueryPendingSendToEthV2BySender) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

type QueryPendingSendToEthV2BySenderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransfersInBatches []*OutgoingTransferAndBatch `protobuf:"bytes,1,rep,name=transfers_in_batches,json=transfersInBatches,proto3" json:"transfers_in_batches,omitempty"`
	UnbatchedTransfers []*v1.OutgoingTransferTx    `protobuf:"bytes,2,rep,name=unbatched_transfers,json=unbatchedTransfers,proto3" json:"unbatched_transfers,omitempty"`
}

func (x *QueryPendingSendToEthV2BySenderResponse) Reset() {
	*x = QueryPendingSendToEthV2BySenderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gravity_v2_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPendingSendToEthV2BySenderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPendingSendToEthV2BySenderResponse) ProtoMessage() {}

// Deprecated: Use QueryPendingSendToEthV2BySenderResponse.ProtoReflect.Descriptor instead.
func (*QueryPendingSendToEthV2BySenderResponse) Descriptor() ([]byte, []int) {
	return file_gravity_v2_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryPendingSendToEthV2BySenderResponse) GetTransfersInBatches() []*OutgoingTransferAndBatch {
	if x != nil {
		return x.TransfersInBatches
	}
	return nil
}

func (x *QueryPendingSendToEthV2BySenderResponse) GetUnbatchedTransfers() []*v1.OutgoingTransferTx {
	if x != nil {
		return x.UnbatchedTransfers
	}
	return nil
}

type QueryOutgoingTxBatchesByAddrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *QueryOutgoingTxBatchesByAddrRequest) Reset() {
	*x = QueryOutgoingTxBatchesByAddrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gravity_v2_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOutgoingTxBatchesByAddrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOutgoingTxBatchesByAddrRequest) ProtoMessage() {}

// Deprecated: Use QueryOutgoingTxBatchesByAddrRequest.ProtoReflect.Descriptor instead.
func (*QueryOutgoingTxBatchesByAddrRequest) Descriptor() ([]byte, []int) {
	return file_gravity_v2_query_proto_rawDescGZIP(), []int{4}
}

func (x *QueryOutgoingTxBatchesByAddrRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type QueryOutgoingTxBatchesByAddrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Batches []*v1.OutgoingTxBatch `protobuf:"bytes,1,rep,name=batches,proto3" json:"batches,omitempty"`
}

func (x *QueryOutgoingTxBatchesByAddrResponse) Reset() {
	*x = QueryOutgoingTxBatchesByAddrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gravity_v2_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOutgoingTxBatchesByAddrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOutgoingTxBatchesByAddrResponse) ProtoMessage() {}

// Deprecated: Use QueryOutgoingTxBatchesByAddrResponse.ProtoReflect.Descriptor instead.
func (*QueryOutgoingTxBatchesByAddrResponse) Descriptor() ([]byte, []int) {
	return file_gravity_v2_query_proto_rawDescGZIP(), []int{5}
}

func (x *QueryOutgoingTxBatchesByAddrResponse) GetBatches() []*v1.OutgoingTxBatch {
	if x != nil {
		return x.Batches
	}
	return nil
}

var File_gravity_v2_query_proto protoreflect.FileDescriptor

var file_gravity_v2_query_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x32, 0x1a, 0x16, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x72,
	0x61, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x19, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x74,
	0x68, 0x56, 0x32, 0x22, 0xd6, 0x01, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x74, 0x68, 0x56, 0x32, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x75, 0x6e, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x54, 0x78, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x12, 0x75, 0x6e, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x22, 0x39, 0x0a, 0x1f,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x6f, 0x45, 0x74, 0x68, 0x56, 0x32, 0x42, 0x79, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0xde, 0x01, 0x0a, 0x27, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x74,
	0x68, 0x56, 0x32, 0x42, 0x79, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73,
	0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4f,
	0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41,
	0x6e, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x12, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x12, 0x55, 0x0a, 0x13, 0x75, 0x6e, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x67,
	0x6f, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x78, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x12, 0x75, 0x6e, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x22, 0x3f, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x63, 0x0a, 0x24, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x42, 0x61, 0x74, 0x63, 0x68, 0x42,
	0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x32, 0xac,
	0x04, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x9b, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x74, 0x68,
	0x56, 0x32, 0x12, 0x23, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x6f, 0x45, 0x74, 0x68, 0x56, 0x32, 0x1a, 0x2b, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x74, 0x68, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x67,
	0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f,
	0x65, 0x74, 0x68, 0x5f, 0x76, 0x32, 0x12, 0xc6, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x74, 0x68, 0x56, 0x32,
	0x42, 0x79, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x74, 0x68, 0x56, 0x32, 0x42, 0x79, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x1a, 0x33, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x74, 0x68, 0x56, 0x32, 0x42, 0x79, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x3d, 0x12, 0x3b, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x74, 0x68, 0x5f, 0x76, 0x32, 0x5f, 0x62, 0x79, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x7d, 0x12,
	0xbb, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54,
	0x78, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2f,
	0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x12, 0x32, 0x2f, 0x67, 0x72, 0x61, 0x76,
	0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x2f, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x74, 0x78, 0x5f, 0x62, 0x79, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x42, 0x8c, 0x01,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32,
	0x42, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x25,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x3b, 0x67, 0x72, 0x61, 0x76,
	0x69, 0x74, 0x79, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x47, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x47, 0x72,
	0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0a, 0x47, 0x72, 0x61, 0x76, 0x69,
	0x74, 0x79, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x16, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x5c,
	0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0b, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gravity_v2_query_proto_rawDescOnce sync.Once
	file_gravity_v2_query_proto_rawDescData = file_gravity_v2_query_proto_rawDesc
)

func file_gravity_v2_query_proto_rawDescGZIP() []byte {
	file_gravity_v2_query_proto_rawDescOnce.Do(func() {
		file_gravity_v2_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_gravity_v2_query_proto_rawDescData)
	})
	return file_gravity_v2_query_proto_rawDescData
}

var file_gravity_v2_query_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_gravity_v2_query_proto_goTypes = []interface{}{
	(*QueryPendingSendToEthV2)(nil),                 // 0: gravity.v2.QueryPendingSendToEthV2
	(*QueryPendingSendToEthV2Response)(nil),         // 1: gravity.v2.QueryPendingSendToEthV2Response
	(*QueryPendingSendToEthV2BySender)(nil),         // 2: gravity.v2.QueryPendingSendToEthV2BySender
	(*QueryPendingSendToEthV2BySenderResponse)(nil), // 3: gravity.v2.QueryPendingSendToEthV2BySenderResponse
	(*QueryOutgoingTxBatchesByAddrRequest)(nil),     // 4: gravity.v2.QueryOutgoingTxBatchesByAddrRequest
	(*QueryOutgoingTxBatchesByAddrResponse)(nil),    // 5: gravity.v2.QueryOutgoingTxBatchesByAddrResponse
	(*OutgoingTransferAndBatch)(nil),                // 6: gravity.v2.OutgoingTransferAndBatch
	(*v1.OutgoingTransferTx)(nil),                   // 7: gravity.v1.OutgoingTransferTx
	(*v1.OutgoingTxBatch)(nil),                      // 8: gravity.v1.OutgoingTxBatch
}
var file_gravity_v2_query_proto_depIdxs = []int32{
	6, // 0: gravity.v2.QueryPendingSendToEthV2Response.transfers_in_batches:type_name -> gravity.v2.OutgoingTransferAndBatch
	7, // 1: gravity.v2.QueryPendingSendToEthV2Response.unbatched_transfers:type_name -> gravity.v1.OutgoingTransferTx
	6, // 2: gravity.v2.QueryPendingSendToEthV2BySenderResponse.transfers_in_batches:type_name -> gravity.v2.OutgoingTransferAndBatch
	7, // 3: gravity.v2.QueryPendingSendToEthV2BySenderResponse.unbatched_transfers:type_name -> gravity.v1.OutgoingTransferTx
	8, // 4: gravity.v2.QueryOutgoingTxBatchesByAddrResponse.batches:type_name -> gravity.v1.OutgoingTxBatch
	0, // 5: gravity.v2.Query.GetPendingSendToEthV2:input_type -> gravity.v2.QueryPendingSendToEthV2
	2, // 6: gravity.v2.Query.GetPendingSendToEthV2BySender:input_type -> gravity.v2.QueryPendingSendToEthV2BySender
	4, // 7: gravity.v2.Query.GetOutgoingTxBatchesByAddr:input_type -> gravity.v2.QueryOutgoingTxBatchesByAddrRequest
	1, // 8: gravity.v2.Query.GetPendingSendToEthV2:output_type -> gravity.v2.QueryPendingSendToEthV2Response
	3, // 9: gravity.v2.Query.GetPendingSendToEthV2BySender:output_type -> gravity.v2.QueryPendingSendToEthV2BySenderResponse
	5, // 10: gravity.v2.Query.GetOutgoingTxBatchesByAddr:output_type -> gravity.v2.QueryOutgoingTxBatchesByAddrResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_gravity_v2_query_proto_init() }
func file_gravity_v2_query_proto_init() {
	if File_gravity_v2_query_proto != nil {
		return
	}
	file_gravity_v2_batch_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gravity_v2_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPendingSendToEthV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gravity_v2_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPendingSendToEthV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gravity_v2_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPendingSendToEthV2BySender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gravity_v2_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPendingSendToEthV2BySenderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gravity_v2_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOutgoingTxBatchesByAddrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gravity_v2_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOutgoingTxBatchesByAddrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gravity_v2_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gravity_v2_query_proto_goTypes,
		DependencyIndexes: file_gravity_v2_query_proto_depIdxs,
		MessageInfos:      file_gravity_v2_query_proto_msgTypes,
	}.Build()
	File_gravity_v2_query_proto = out.File
	file_gravity_v2_query_proto_rawDesc = nil
	file_gravity_v2_query_proto_goTypes = nil
	file_gravity_v2_query_proto_depIdxs = nil
}
