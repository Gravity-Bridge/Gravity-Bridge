// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package gravityv1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_OutgoingTxBatch_3_list)(nil)

type _OutgoingTxBatch_3_list struct {
	list *[]*OutgoingTransferTx
}

func (x *_OutgoingTxBatch_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_OutgoingTxBatch_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_OutgoingTxBatch_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OutgoingTransferTx)
	(*x.list)[i] = concreteValue
}

func (x *_OutgoingTxBatch_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OutgoingTransferTx)
	*x.list = append(*x.list, concreteValue)
}

func (x *_OutgoingTxBatch_3_list) AppendMutable() protoreflect.Value {
	v := new(OutgoingTransferTx)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_OutgoingTxBatch_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_OutgoingTxBatch_3_list) NewElement() protoreflect.Value {
	v := new(OutgoingTransferTx)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_OutgoingTxBatch_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_OutgoingTxBatch                      protoreflect.MessageDescriptor
	fd_OutgoingTxBatch_batch_nonce          protoreflect.FieldDescriptor
	fd_OutgoingTxBatch_batch_timeout        protoreflect.FieldDescriptor
	fd_OutgoingTxBatch_transactions         protoreflect.FieldDescriptor
	fd_OutgoingTxBatch_token_contract       protoreflect.FieldDescriptor
	fd_OutgoingTxBatch_cosmos_block_created protoreflect.FieldDescriptor
)

func init() {
	file_gravity_v1_batch_proto_init()
	md_OutgoingTxBatch = File_gravity_v1_batch_proto.Messages().ByName("OutgoingTxBatch")
	fd_OutgoingTxBatch_batch_nonce = md_OutgoingTxBatch.Fields().ByName("batch_nonce")
	fd_OutgoingTxBatch_batch_timeout = md_OutgoingTxBatch.Fields().ByName("batch_timeout")
	fd_OutgoingTxBatch_transactions = md_OutgoingTxBatch.Fields().ByName("transactions")
	fd_OutgoingTxBatch_token_contract = md_OutgoingTxBatch.Fields().ByName("token_contract")
	fd_OutgoingTxBatch_cosmos_block_created = md_OutgoingTxBatch.Fields().ByName("cosmos_block_created")
}

var _ protoreflect.Message = (*fastReflection_OutgoingTxBatch)(nil)

type fastReflection_OutgoingTxBatch OutgoingTxBatch

func (x *OutgoingTxBatch) ProtoReflect() protoreflect.Message {
	return (*fastReflection_OutgoingTxBatch)(x)
}

func (x *OutgoingTxBatch) slowProtoReflect() protoreflect.Message {
	mi := &file_gravity_v1_batch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_OutgoingTxBatch_messageType fastReflection_OutgoingTxBatch_messageType
var _ protoreflect.MessageType = fastReflection_OutgoingTxBatch_messageType{}

type fastReflection_OutgoingTxBatch_messageType struct{}

func (x fastReflection_OutgoingTxBatch_messageType) Zero() protoreflect.Message {
	return (*fastReflection_OutgoingTxBatch)(nil)
}
func (x fastReflection_OutgoingTxBatch_messageType) New() protoreflect.Message {
	return new(fastReflection_OutgoingTxBatch)
}
func (x fastReflection_OutgoingTxBatch_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_OutgoingTxBatch
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_OutgoingTxBatch) Descriptor() protoreflect.MessageDescriptor {
	return md_OutgoingTxBatch
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_OutgoingTxBatch) Type() protoreflect.MessageType {
	return _fastReflection_OutgoingTxBatch_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_OutgoingTxBatch) New() protoreflect.Message {
	return new(fastReflection_OutgoingTxBatch)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_OutgoingTxBatch) Interface() protoreflect.ProtoMessage {
	return (*OutgoingTxBatch)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_OutgoingTxBatch) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BatchNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BatchNonce)
		if !f(fd_OutgoingTxBatch_batch_nonce, value) {
			return
		}
	}
	if x.BatchTimeout != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BatchTimeout)
		if !f(fd_OutgoingTxBatch_batch_timeout, value) {
			return
		}
	}
	if len(x.Transactions) != 0 {
		value := protoreflect.ValueOfList(&_OutgoingTxBatch_3_list{list: &x.Transactions})
		if !f(fd_OutgoingTxBatch_transactions, value) {
			return
		}
	}
	if x.TokenContract != "" {
		value := protoreflect.ValueOfString(x.TokenContract)
		if !f(fd_OutgoingTxBatch_token_contract, value) {
			return
		}
	}
	if x.CosmosBlockCreated != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CosmosBlockCreated)
		if !f(fd_OutgoingTxBatch_cosmos_block_created, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_OutgoingTxBatch) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "gravity.v1.OutgoingTxBatch.batch_nonce":
		return x.BatchNonce != uint64(0)
	case "gravity.v1.OutgoingTxBatch.batch_timeout":
		return x.BatchTimeout != uint64(0)
	case "gravity.v1.OutgoingTxBatch.transactions":
		return len(x.Transactions) != 0
	case "gravity.v1.OutgoingTxBatch.token_contract":
		return x.TokenContract != ""
	case "gravity.v1.OutgoingTxBatch.cosmos_block_created":
		return x.CosmosBlockCreated != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingTxBatch"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingTxBatch does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutgoingTxBatch) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "gravity.v1.OutgoingTxBatch.batch_nonce":
		x.BatchNonce = uint64(0)
	case "gravity.v1.OutgoingTxBatch.batch_timeout":
		x.BatchTimeout = uint64(0)
	case "gravity.v1.OutgoingTxBatch.transactions":
		x.Transactions = nil
	case "gravity.v1.OutgoingTxBatch.token_contract":
		x.TokenContract = ""
	case "gravity.v1.OutgoingTxBatch.cosmos_block_created":
		x.CosmosBlockCreated = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingTxBatch"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingTxBatch does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_OutgoingTxBatch) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "gravity.v1.OutgoingTxBatch.batch_nonce":
		value := x.BatchNonce
		return protoreflect.ValueOfUint64(value)
	case "gravity.v1.OutgoingTxBatch.batch_timeout":
		value := x.BatchTimeout
		return protoreflect.ValueOfUint64(value)
	case "gravity.v1.OutgoingTxBatch.transactions":
		if len(x.Transactions) == 0 {
			return protoreflect.ValueOfList(&_OutgoingTxBatch_3_list{})
		}
		listValue := &_OutgoingTxBatch_3_list{list: &x.Transactions}
		return protoreflect.ValueOfList(listValue)
	case "gravity.v1.OutgoingTxBatch.token_contract":
		value := x.TokenContract
		return protoreflect.ValueOfString(value)
	case "gravity.v1.OutgoingTxBatch.cosmos_block_created":
		value := x.CosmosBlockCreated
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingTxBatch"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingTxBatch does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutgoingTxBatch) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "gravity.v1.OutgoingTxBatch.batch_nonce":
		x.BatchNonce = value.Uint()
	case "gravity.v1.OutgoingTxBatch.batch_timeout":
		x.BatchTimeout = value.Uint()
	case "gravity.v1.OutgoingTxBatch.transactions":
		lv := value.List()
		clv := lv.(*_OutgoingTxBatch_3_list)
		x.Transactions = *clv.list
	case "gravity.v1.OutgoingTxBatch.token_contract":
		x.TokenContract = value.Interface().(string)
	case "gravity.v1.OutgoingTxBatch.cosmos_block_created":
		x.CosmosBlockCreated = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingTxBatch"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingTxBatch does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutgoingTxBatch) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v1.OutgoingTxBatch.transactions":
		if x.Transactions == nil {
			x.Transactions = []*OutgoingTransferTx{}
		}
		value := &_OutgoingTxBatch_3_list{list: &x.Transactions}
		return protoreflect.ValueOfList(value)
	case "gravity.v1.OutgoingTxBatch.batch_nonce":
		panic(fmt.Errorf("field batch_nonce of message gravity.v1.OutgoingTxBatch is not mutable"))
	case "gravity.v1.OutgoingTxBatch.batch_timeout":
		panic(fmt.Errorf("field batch_timeout of message gravity.v1.OutgoingTxBatch is not mutable"))
	case "gravity.v1.OutgoingTxBatch.token_contract":
		panic(fmt.Errorf("field token_contract of message gravity.v1.OutgoingTxBatch is not mutable"))
	case "gravity.v1.OutgoingTxBatch.cosmos_block_created":
		panic(fmt.Errorf("field cosmos_block_created of message gravity.v1.OutgoingTxBatch is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingTxBatch"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingTxBatch does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_OutgoingTxBatch) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v1.OutgoingTxBatch.batch_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "gravity.v1.OutgoingTxBatch.batch_timeout":
		return protoreflect.ValueOfUint64(uint64(0))
	case "gravity.v1.OutgoingTxBatch.transactions":
		list := []*OutgoingTransferTx{}
		return protoreflect.ValueOfList(&_OutgoingTxBatch_3_list{list: &list})
	case "gravity.v1.OutgoingTxBatch.token_contract":
		return protoreflect.ValueOfString("")
	case "gravity.v1.OutgoingTxBatch.cosmos_block_created":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingTxBatch"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingTxBatch does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_OutgoingTxBatch) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in gravity.v1.OutgoingTxBatch", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_OutgoingTxBatch) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutgoingTxBatch) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_OutgoingTxBatch) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_OutgoingTxBatch) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*OutgoingTxBatch)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BatchNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.BatchNonce))
		}
		if x.BatchTimeout != 0 {
			n += 1 + runtime.Sov(uint64(x.BatchTimeout))
		}
		if len(x.Transactions) > 0 {
			for _, e := range x.Transactions {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.TokenContract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CosmosBlockCreated != 0 {
			n += 1 + runtime.Sov(uint64(x.CosmosBlockCreated))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*OutgoingTxBatch)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CosmosBlockCreated != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CosmosBlockCreated))
			i--
			dAtA[i] = 0x28
		}
		if len(x.TokenContract) > 0 {
			i -= len(x.TokenContract)
			copy(dAtA[i:], x.TokenContract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenContract)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Transactions) > 0 {
			for iNdEx := len(x.Transactions) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Transactions[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if x.BatchTimeout != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BatchTimeout))
			i--
			dAtA[i] = 0x10
		}
		if x.BatchNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BatchNonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*OutgoingTxBatch)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OutgoingTxBatch: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OutgoingTxBatch: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BatchNonce", wireType)
				}
				x.BatchNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BatchNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BatchTimeout", wireType)
				}
				x.BatchTimeout = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BatchTimeout |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Transactions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Transactions = append(x.Transactions, &OutgoingTransferTx{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Transactions[len(x.Transactions)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenContract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenContract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CosmosBlockCreated", wireType)
				}
				x.CosmosBlockCreated = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CosmosBlockCreated |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_OutgoingTransferTx              protoreflect.MessageDescriptor
	fd_OutgoingTransferTx_id           protoreflect.FieldDescriptor
	fd_OutgoingTransferTx_sender       protoreflect.FieldDescriptor
	fd_OutgoingTransferTx_dest_address protoreflect.FieldDescriptor
	fd_OutgoingTransferTx_erc20_token  protoreflect.FieldDescriptor
	fd_OutgoingTransferTx_erc20_fee    protoreflect.FieldDescriptor
)

func init() {
	file_gravity_v1_batch_proto_init()
	md_OutgoingTransferTx = File_gravity_v1_batch_proto.Messages().ByName("OutgoingTransferTx")
	fd_OutgoingTransferTx_id = md_OutgoingTransferTx.Fields().ByName("id")
	fd_OutgoingTransferTx_sender = md_OutgoingTransferTx.Fields().ByName("sender")
	fd_OutgoingTransferTx_dest_address = md_OutgoingTransferTx.Fields().ByName("dest_address")
	fd_OutgoingTransferTx_erc20_token = md_OutgoingTransferTx.Fields().ByName("erc20_token")
	fd_OutgoingTransferTx_erc20_fee = md_OutgoingTransferTx.Fields().ByName("erc20_fee")
}

var _ protoreflect.Message = (*fastReflection_OutgoingTransferTx)(nil)

type fastReflection_OutgoingTransferTx OutgoingTransferTx

func (x *OutgoingTransferTx) ProtoReflect() protoreflect.Message {
	return (*fastReflection_OutgoingTransferTx)(x)
}

func (x *OutgoingTransferTx) slowProtoReflect() protoreflect.Message {
	mi := &file_gravity_v1_batch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_OutgoingTransferTx_messageType fastReflection_OutgoingTransferTx_messageType
var _ protoreflect.MessageType = fastReflection_OutgoingTransferTx_messageType{}

type fastReflection_OutgoingTransferTx_messageType struct{}

func (x fastReflection_OutgoingTransferTx_messageType) Zero() protoreflect.Message {
	return (*fastReflection_OutgoingTransferTx)(nil)
}
func (x fastReflection_OutgoingTransferTx_messageType) New() protoreflect.Message {
	return new(fastReflection_OutgoingTransferTx)
}
func (x fastReflection_OutgoingTransferTx_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_OutgoingTransferTx
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_OutgoingTransferTx) Descriptor() protoreflect.MessageDescriptor {
	return md_OutgoingTransferTx
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_OutgoingTransferTx) Type() protoreflect.MessageType {
	return _fastReflection_OutgoingTransferTx_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_OutgoingTransferTx) New() protoreflect.Message {
	return new(fastReflection_OutgoingTransferTx)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_OutgoingTransferTx) Interface() protoreflect.ProtoMessage {
	return (*OutgoingTransferTx)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_OutgoingTransferTx) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_OutgoingTransferTx_id, value) {
			return
		}
	}
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_OutgoingTransferTx_sender, value) {
			return
		}
	}
	if x.DestAddress != "" {
		value := protoreflect.ValueOfString(x.DestAddress)
		if !f(fd_OutgoingTransferTx_dest_address, value) {
			return
		}
	}
	if x.Erc20Token != nil {
		value := protoreflect.ValueOfMessage(x.Erc20Token.ProtoReflect())
		if !f(fd_OutgoingTransferTx_erc20_token, value) {
			return
		}
	}
	if x.Erc20Fee != nil {
		value := protoreflect.ValueOfMessage(x.Erc20Fee.ProtoReflect())
		if !f(fd_OutgoingTransferTx_erc20_fee, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_OutgoingTransferTx) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "gravity.v1.OutgoingTransferTx.id":
		return x.Id != uint64(0)
	case "gravity.v1.OutgoingTransferTx.sender":
		return x.Sender != ""
	case "gravity.v1.OutgoingTransferTx.dest_address":
		return x.DestAddress != ""
	case "gravity.v1.OutgoingTransferTx.erc20_token":
		return x.Erc20Token != nil
	case "gravity.v1.OutgoingTransferTx.erc20_fee":
		return x.Erc20Fee != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingTransferTx"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingTransferTx does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutgoingTransferTx) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "gravity.v1.OutgoingTransferTx.id":
		x.Id = uint64(0)
	case "gravity.v1.OutgoingTransferTx.sender":
		x.Sender = ""
	case "gravity.v1.OutgoingTransferTx.dest_address":
		x.DestAddress = ""
	case "gravity.v1.OutgoingTransferTx.erc20_token":
		x.Erc20Token = nil
	case "gravity.v1.OutgoingTransferTx.erc20_fee":
		x.Erc20Fee = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingTransferTx"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingTransferTx does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_OutgoingTransferTx) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "gravity.v1.OutgoingTransferTx.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "gravity.v1.OutgoingTransferTx.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "gravity.v1.OutgoingTransferTx.dest_address":
		value := x.DestAddress
		return protoreflect.ValueOfString(value)
	case "gravity.v1.OutgoingTransferTx.erc20_token":
		value := x.Erc20Token
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "gravity.v1.OutgoingTransferTx.erc20_fee":
		value := x.Erc20Fee
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingTransferTx"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingTransferTx does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutgoingTransferTx) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "gravity.v1.OutgoingTransferTx.id":
		x.Id = value.Uint()
	case "gravity.v1.OutgoingTransferTx.sender":
		x.Sender = value.Interface().(string)
	case "gravity.v1.OutgoingTransferTx.dest_address":
		x.DestAddress = value.Interface().(string)
	case "gravity.v1.OutgoingTransferTx.erc20_token":
		x.Erc20Token = value.Message().Interface().(*ERC20Token)
	case "gravity.v1.OutgoingTransferTx.erc20_fee":
		x.Erc20Fee = value.Message().Interface().(*ERC20Token)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingTransferTx"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingTransferTx does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutgoingTransferTx) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v1.OutgoingTransferTx.erc20_token":
		if x.Erc20Token == nil {
			x.Erc20Token = new(ERC20Token)
		}
		return protoreflect.ValueOfMessage(x.Erc20Token.ProtoReflect())
	case "gravity.v1.OutgoingTransferTx.erc20_fee":
		if x.Erc20Fee == nil {
			x.Erc20Fee = new(ERC20Token)
		}
		return protoreflect.ValueOfMessage(x.Erc20Fee.ProtoReflect())
	case "gravity.v1.OutgoingTransferTx.id":
		panic(fmt.Errorf("field id of message gravity.v1.OutgoingTransferTx is not mutable"))
	case "gravity.v1.OutgoingTransferTx.sender":
		panic(fmt.Errorf("field sender of message gravity.v1.OutgoingTransferTx is not mutable"))
	case "gravity.v1.OutgoingTransferTx.dest_address":
		panic(fmt.Errorf("field dest_address of message gravity.v1.OutgoingTransferTx is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingTransferTx"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingTransferTx does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_OutgoingTransferTx) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v1.OutgoingTransferTx.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "gravity.v1.OutgoingTransferTx.sender":
		return protoreflect.ValueOfString("")
	case "gravity.v1.OutgoingTransferTx.dest_address":
		return protoreflect.ValueOfString("")
	case "gravity.v1.OutgoingTransferTx.erc20_token":
		m := new(ERC20Token)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "gravity.v1.OutgoingTransferTx.erc20_fee":
		m := new(ERC20Token)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingTransferTx"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingTransferTx does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_OutgoingTransferTx) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in gravity.v1.OutgoingTransferTx", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_OutgoingTransferTx) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutgoingTransferTx) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_OutgoingTransferTx) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_OutgoingTransferTx) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*OutgoingTransferTx)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DestAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Erc20Token != nil {
			l = options.Size(x.Erc20Token)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Erc20Fee != nil {
			l = options.Size(x.Erc20Fee)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*OutgoingTransferTx)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Erc20Fee != nil {
			encoded, err := options.Marshal(x.Erc20Fee)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Erc20Token != nil {
			encoded, err := options.Marshal(x.Erc20Token)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.DestAddress) > 0 {
			i -= len(x.DestAddress)
			copy(dAtA[i:], x.DestAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DestAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*OutgoingTransferTx)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OutgoingTransferTx: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OutgoingTransferTx: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DestAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DestAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Erc20Token", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Erc20Token == nil {
					x.Erc20Token = &ERC20Token{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Erc20Token); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Erc20Fee", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Erc20Fee == nil {
					x.Erc20Fee = &ERC20Token{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Erc20Fee); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_OutgoingLogicCall_1_list)(nil)

type _OutgoingLogicCall_1_list struct {
	list *[]*ERC20Token
}

func (x *_OutgoingLogicCall_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_OutgoingLogicCall_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_OutgoingLogicCall_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ERC20Token)
	(*x.list)[i] = concreteValue
}

func (x *_OutgoingLogicCall_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ERC20Token)
	*x.list = append(*x.list, concreteValue)
}

func (x *_OutgoingLogicCall_1_list) AppendMutable() protoreflect.Value {
	v := new(ERC20Token)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_OutgoingLogicCall_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_OutgoingLogicCall_1_list) NewElement() protoreflect.Value {
	v := new(ERC20Token)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_OutgoingLogicCall_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_OutgoingLogicCall_2_list)(nil)

type _OutgoingLogicCall_2_list struct {
	list *[]*ERC20Token
}

func (x *_OutgoingLogicCall_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_OutgoingLogicCall_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_OutgoingLogicCall_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ERC20Token)
	(*x.list)[i] = concreteValue
}

func (x *_OutgoingLogicCall_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ERC20Token)
	*x.list = append(*x.list, concreteValue)
}

func (x *_OutgoingLogicCall_2_list) AppendMutable() protoreflect.Value {
	v := new(ERC20Token)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_OutgoingLogicCall_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_OutgoingLogicCall_2_list) NewElement() protoreflect.Value {
	v := new(ERC20Token)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_OutgoingLogicCall_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_OutgoingLogicCall                        protoreflect.MessageDescriptor
	fd_OutgoingLogicCall_transfers              protoreflect.FieldDescriptor
	fd_OutgoingLogicCall_fees                   protoreflect.FieldDescriptor
	fd_OutgoingLogicCall_logic_contract_address protoreflect.FieldDescriptor
	fd_OutgoingLogicCall_payload                protoreflect.FieldDescriptor
	fd_OutgoingLogicCall_timeout                protoreflect.FieldDescriptor
	fd_OutgoingLogicCall_invalidation_id        protoreflect.FieldDescriptor
	fd_OutgoingLogicCall_invalidation_nonce     protoreflect.FieldDescriptor
	fd_OutgoingLogicCall_cosmos_block_created   protoreflect.FieldDescriptor
)

func init() {
	file_gravity_v1_batch_proto_init()
	md_OutgoingLogicCall = File_gravity_v1_batch_proto.Messages().ByName("OutgoingLogicCall")
	fd_OutgoingLogicCall_transfers = md_OutgoingLogicCall.Fields().ByName("transfers")
	fd_OutgoingLogicCall_fees = md_OutgoingLogicCall.Fields().ByName("fees")
	fd_OutgoingLogicCall_logic_contract_address = md_OutgoingLogicCall.Fields().ByName("logic_contract_address")
	fd_OutgoingLogicCall_payload = md_OutgoingLogicCall.Fields().ByName("payload")
	fd_OutgoingLogicCall_timeout = md_OutgoingLogicCall.Fields().ByName("timeout")
	fd_OutgoingLogicCall_invalidation_id = md_OutgoingLogicCall.Fields().ByName("invalidation_id")
	fd_OutgoingLogicCall_invalidation_nonce = md_OutgoingLogicCall.Fields().ByName("invalidation_nonce")
	fd_OutgoingLogicCall_cosmos_block_created = md_OutgoingLogicCall.Fields().ByName("cosmos_block_created")
}

var _ protoreflect.Message = (*fastReflection_OutgoingLogicCall)(nil)

type fastReflection_OutgoingLogicCall OutgoingLogicCall

func (x *OutgoingLogicCall) ProtoReflect() protoreflect.Message {
	return (*fastReflection_OutgoingLogicCall)(x)
}

func (x *OutgoingLogicCall) slowProtoReflect() protoreflect.Message {
	mi := &file_gravity_v1_batch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_OutgoingLogicCall_messageType fastReflection_OutgoingLogicCall_messageType
var _ protoreflect.MessageType = fastReflection_OutgoingLogicCall_messageType{}

type fastReflection_OutgoingLogicCall_messageType struct{}

func (x fastReflection_OutgoingLogicCall_messageType) Zero() protoreflect.Message {
	return (*fastReflection_OutgoingLogicCall)(nil)
}
func (x fastReflection_OutgoingLogicCall_messageType) New() protoreflect.Message {
	return new(fastReflection_OutgoingLogicCall)
}
func (x fastReflection_OutgoingLogicCall_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_OutgoingLogicCall
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_OutgoingLogicCall) Descriptor() protoreflect.MessageDescriptor {
	return md_OutgoingLogicCall
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_OutgoingLogicCall) Type() protoreflect.MessageType {
	return _fastReflection_OutgoingLogicCall_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_OutgoingLogicCall) New() protoreflect.Message {
	return new(fastReflection_OutgoingLogicCall)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_OutgoingLogicCall) Interface() protoreflect.ProtoMessage {
	return (*OutgoingLogicCall)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_OutgoingLogicCall) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Transfers) != 0 {
		value := protoreflect.ValueOfList(&_OutgoingLogicCall_1_list{list: &x.Transfers})
		if !f(fd_OutgoingLogicCall_transfers, value) {
			return
		}
	}
	if len(x.Fees) != 0 {
		value := protoreflect.ValueOfList(&_OutgoingLogicCall_2_list{list: &x.Fees})
		if !f(fd_OutgoingLogicCall_fees, value) {
			return
		}
	}
	if x.LogicContractAddress != "" {
		value := protoreflect.ValueOfString(x.LogicContractAddress)
		if !f(fd_OutgoingLogicCall_logic_contract_address, value) {
			return
		}
	}
	if len(x.Payload) != 0 {
		value := protoreflect.ValueOfBytes(x.Payload)
		if !f(fd_OutgoingLogicCall_payload, value) {
			return
		}
	}
	if x.Timeout != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Timeout)
		if !f(fd_OutgoingLogicCall_timeout, value) {
			return
		}
	}
	if len(x.InvalidationId) != 0 {
		value := protoreflect.ValueOfBytes(x.InvalidationId)
		if !f(fd_OutgoingLogicCall_invalidation_id, value) {
			return
		}
	}
	if x.InvalidationNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.InvalidationNonce)
		if !f(fd_OutgoingLogicCall_invalidation_nonce, value) {
			return
		}
	}
	if x.CosmosBlockCreated != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CosmosBlockCreated)
		if !f(fd_OutgoingLogicCall_cosmos_block_created, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_OutgoingLogicCall) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "gravity.v1.OutgoingLogicCall.transfers":
		return len(x.Transfers) != 0
	case "gravity.v1.OutgoingLogicCall.fees":
		return len(x.Fees) != 0
	case "gravity.v1.OutgoingLogicCall.logic_contract_address":
		return x.LogicContractAddress != ""
	case "gravity.v1.OutgoingLogicCall.payload":
		return len(x.Payload) != 0
	case "gravity.v1.OutgoingLogicCall.timeout":
		return x.Timeout != uint64(0)
	case "gravity.v1.OutgoingLogicCall.invalidation_id":
		return len(x.InvalidationId) != 0
	case "gravity.v1.OutgoingLogicCall.invalidation_nonce":
		return x.InvalidationNonce != uint64(0)
	case "gravity.v1.OutgoingLogicCall.cosmos_block_created":
		return x.CosmosBlockCreated != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingLogicCall"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingLogicCall does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutgoingLogicCall) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "gravity.v1.OutgoingLogicCall.transfers":
		x.Transfers = nil
	case "gravity.v1.OutgoingLogicCall.fees":
		x.Fees = nil
	case "gravity.v1.OutgoingLogicCall.logic_contract_address":
		x.LogicContractAddress = ""
	case "gravity.v1.OutgoingLogicCall.payload":
		x.Payload = nil
	case "gravity.v1.OutgoingLogicCall.timeout":
		x.Timeout = uint64(0)
	case "gravity.v1.OutgoingLogicCall.invalidation_id":
		x.InvalidationId = nil
	case "gravity.v1.OutgoingLogicCall.invalidation_nonce":
		x.InvalidationNonce = uint64(0)
	case "gravity.v1.OutgoingLogicCall.cosmos_block_created":
		x.CosmosBlockCreated = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingLogicCall"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingLogicCall does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_OutgoingLogicCall) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "gravity.v1.OutgoingLogicCall.transfers":
		if len(x.Transfers) == 0 {
			return protoreflect.ValueOfList(&_OutgoingLogicCall_1_list{})
		}
		listValue := &_OutgoingLogicCall_1_list{list: &x.Transfers}
		return protoreflect.ValueOfList(listValue)
	case "gravity.v1.OutgoingLogicCall.fees":
		if len(x.Fees) == 0 {
			return protoreflect.ValueOfList(&_OutgoingLogicCall_2_list{})
		}
		listValue := &_OutgoingLogicCall_2_list{list: &x.Fees}
		return protoreflect.ValueOfList(listValue)
	case "gravity.v1.OutgoingLogicCall.logic_contract_address":
		value := x.LogicContractAddress
		return protoreflect.ValueOfString(value)
	case "gravity.v1.OutgoingLogicCall.payload":
		value := x.Payload
		return protoreflect.ValueOfBytes(value)
	case "gravity.v1.OutgoingLogicCall.timeout":
		value := x.Timeout
		return protoreflect.ValueOfUint64(value)
	case "gravity.v1.OutgoingLogicCall.invalidation_id":
		value := x.InvalidationId
		return protoreflect.ValueOfBytes(value)
	case "gravity.v1.OutgoingLogicCall.invalidation_nonce":
		value := x.InvalidationNonce
		return protoreflect.ValueOfUint64(value)
	case "gravity.v1.OutgoingLogicCall.cosmos_block_created":
		value := x.CosmosBlockCreated
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingLogicCall"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingLogicCall does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutgoingLogicCall) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "gravity.v1.OutgoingLogicCall.transfers":
		lv := value.List()
		clv := lv.(*_OutgoingLogicCall_1_list)
		x.Transfers = *clv.list
	case "gravity.v1.OutgoingLogicCall.fees":
		lv := value.List()
		clv := lv.(*_OutgoingLogicCall_2_list)
		x.Fees = *clv.list
	case "gravity.v1.OutgoingLogicCall.logic_contract_address":
		x.LogicContractAddress = value.Interface().(string)
	case "gravity.v1.OutgoingLogicCall.payload":
		x.Payload = value.Bytes()
	case "gravity.v1.OutgoingLogicCall.timeout":
		x.Timeout = value.Uint()
	case "gravity.v1.OutgoingLogicCall.invalidation_id":
		x.InvalidationId = value.Bytes()
	case "gravity.v1.OutgoingLogicCall.invalidation_nonce":
		x.InvalidationNonce = value.Uint()
	case "gravity.v1.OutgoingLogicCall.cosmos_block_created":
		x.CosmosBlockCreated = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingLogicCall"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingLogicCall does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutgoingLogicCall) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v1.OutgoingLogicCall.transfers":
		if x.Transfers == nil {
			x.Transfers = []*ERC20Token{}
		}
		value := &_OutgoingLogicCall_1_list{list: &x.Transfers}
		return protoreflect.ValueOfList(value)
	case "gravity.v1.OutgoingLogicCall.fees":
		if x.Fees == nil {
			x.Fees = []*ERC20Token{}
		}
		value := &_OutgoingLogicCall_2_list{list: &x.Fees}
		return protoreflect.ValueOfList(value)
	case "gravity.v1.OutgoingLogicCall.logic_contract_address":
		panic(fmt.Errorf("field logic_contract_address of message gravity.v1.OutgoingLogicCall is not mutable"))
	case "gravity.v1.OutgoingLogicCall.payload":
		panic(fmt.Errorf("field payload of message gravity.v1.OutgoingLogicCall is not mutable"))
	case "gravity.v1.OutgoingLogicCall.timeout":
		panic(fmt.Errorf("field timeout of message gravity.v1.OutgoingLogicCall is not mutable"))
	case "gravity.v1.OutgoingLogicCall.invalidation_id":
		panic(fmt.Errorf("field invalidation_id of message gravity.v1.OutgoingLogicCall is not mutable"))
	case "gravity.v1.OutgoingLogicCall.invalidation_nonce":
		panic(fmt.Errorf("field invalidation_nonce of message gravity.v1.OutgoingLogicCall is not mutable"))
	case "gravity.v1.OutgoingLogicCall.cosmos_block_created":
		panic(fmt.Errorf("field cosmos_block_created of message gravity.v1.OutgoingLogicCall is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingLogicCall"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingLogicCall does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_OutgoingLogicCall) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v1.OutgoingLogicCall.transfers":
		list := []*ERC20Token{}
		return protoreflect.ValueOfList(&_OutgoingLogicCall_1_list{list: &list})
	case "gravity.v1.OutgoingLogicCall.fees":
		list := []*ERC20Token{}
		return protoreflect.ValueOfList(&_OutgoingLogicCall_2_list{list: &list})
	case "gravity.v1.OutgoingLogicCall.logic_contract_address":
		return protoreflect.ValueOfString("")
	case "gravity.v1.OutgoingLogicCall.payload":
		return protoreflect.ValueOfBytes(nil)
	case "gravity.v1.OutgoingLogicCall.timeout":
		return protoreflect.ValueOfUint64(uint64(0))
	case "gravity.v1.OutgoingLogicCall.invalidation_id":
		return protoreflect.ValueOfBytes(nil)
	case "gravity.v1.OutgoingLogicCall.invalidation_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "gravity.v1.OutgoingLogicCall.cosmos_block_created":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.OutgoingLogicCall"))
		}
		panic(fmt.Errorf("message gravity.v1.OutgoingLogicCall does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_OutgoingLogicCall) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in gravity.v1.OutgoingLogicCall", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_OutgoingLogicCall) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutgoingLogicCall) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_OutgoingLogicCall) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_OutgoingLogicCall) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*OutgoingLogicCall)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Transfers) > 0 {
			for _, e := range x.Transfers {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Fees) > 0 {
			for _, e := range x.Fees {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.LogicContractAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Payload)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Timeout != 0 {
			n += 1 + runtime.Sov(uint64(x.Timeout))
		}
		l = len(x.InvalidationId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.InvalidationNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.InvalidationNonce))
		}
		if x.CosmosBlockCreated != 0 {
			n += 1 + runtime.Sov(uint64(x.CosmosBlockCreated))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*OutgoingLogicCall)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CosmosBlockCreated != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CosmosBlockCreated))
			i--
			dAtA[i] = 0x40
		}
		if x.InvalidationNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InvalidationNonce))
			i--
			dAtA[i] = 0x38
		}
		if len(x.InvalidationId) > 0 {
			i -= len(x.InvalidationId)
			copy(dAtA[i:], x.InvalidationId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.InvalidationId)))
			i--
			dAtA[i] = 0x32
		}
		if x.Timeout != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Timeout))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Payload) > 0 {
			i -= len(x.Payload)
			copy(dAtA[i:], x.Payload)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Payload)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.LogicContractAddress) > 0 {
			i -= len(x.LogicContractAddress)
			copy(dAtA[i:], x.LogicContractAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LogicContractAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Fees) > 0 {
			for iNdEx := len(x.Fees) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Fees[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Transfers) > 0 {
			for iNdEx := len(x.Transfers) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Transfers[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*OutgoingLogicCall)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OutgoingLogicCall: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OutgoingLogicCall: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Transfers", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Transfers = append(x.Transfers, &ERC20Token{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Transfers[len(x.Transfers)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Fees", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Fees = append(x.Fees, &ERC20Token{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Fees[len(x.Fees)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LogicContractAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LogicContractAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Payload", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Payload = append(x.Payload[:0], dAtA[iNdEx:postIndex]...)
				if x.Payload == nil {
					x.Payload = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Timeout", wireType)
				}
				x.Timeout = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Timeout |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InvalidationId", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InvalidationId = append(x.InvalidationId[:0], dAtA[iNdEx:postIndex]...)
				if x.InvalidationId == nil {
					x.InvalidationId = []byte{}
				}
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InvalidationNonce", wireType)
				}
				x.InvalidationNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InvalidationNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CosmosBlockCreated", wireType)
				}
				x.CosmosBlockCreated = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CosmosBlockCreated |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventOutgoingBatchCanceled                 protoreflect.MessageDescriptor
	fd_EventOutgoingBatchCanceled_bridge_contract protoreflect.FieldDescriptor
	fd_EventOutgoingBatchCanceled_bridge_chain_id protoreflect.FieldDescriptor
	fd_EventOutgoingBatchCanceled_batch_id        protoreflect.FieldDescriptor
	fd_EventOutgoingBatchCanceled_nonce           protoreflect.FieldDescriptor
)

func init() {
	file_gravity_v1_batch_proto_init()
	md_EventOutgoingBatchCanceled = File_gravity_v1_batch_proto.Messages().ByName("EventOutgoingBatchCanceled")
	fd_EventOutgoingBatchCanceled_bridge_contract = md_EventOutgoingBatchCanceled.Fields().ByName("bridge_contract")
	fd_EventOutgoingBatchCanceled_bridge_chain_id = md_EventOutgoingBatchCanceled.Fields().ByName("bridge_chain_id")
	fd_EventOutgoingBatchCanceled_batch_id = md_EventOutgoingBatchCanceled.Fields().ByName("batch_id")
	fd_EventOutgoingBatchCanceled_nonce = md_EventOutgoingBatchCanceled.Fields().ByName("nonce")
}

var _ protoreflect.Message = (*fastReflection_EventOutgoingBatchCanceled)(nil)

type fastReflection_EventOutgoingBatchCanceled EventOutgoingBatchCanceled

func (x *EventOutgoingBatchCanceled) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventOutgoingBatchCanceled)(x)
}

func (x *EventOutgoingBatchCanceled) slowProtoReflect() protoreflect.Message {
	mi := &file_gravity_v1_batch_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventOutgoingBatchCanceled_messageType fastReflection_EventOutgoingBatchCanceled_messageType
var _ protoreflect.MessageType = fastReflection_EventOutgoingBatchCanceled_messageType{}

type fastReflection_EventOutgoingBatchCanceled_messageType struct{}

func (x fastReflection_EventOutgoingBatchCanceled_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventOutgoingBatchCanceled)(nil)
}
func (x fastReflection_EventOutgoingBatchCanceled_messageType) New() protoreflect.Message {
	return new(fastReflection_EventOutgoingBatchCanceled)
}
func (x fastReflection_EventOutgoingBatchCanceled_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventOutgoingBatchCanceled
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventOutgoingBatchCanceled) Descriptor() protoreflect.MessageDescriptor {
	return md_EventOutgoingBatchCanceled
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventOutgoingBatchCanceled) Type() protoreflect.MessageType {
	return _fastReflection_EventOutgoingBatchCanceled_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventOutgoingBatchCanceled) New() protoreflect.Message {
	return new(fastReflection_EventOutgoingBatchCanceled)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventOutgoingBatchCanceled) Interface() protoreflect.ProtoMessage {
	return (*EventOutgoingBatchCanceled)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventOutgoingBatchCanceled) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BridgeContract != "" {
		value := protoreflect.ValueOfString(x.BridgeContract)
		if !f(fd_EventOutgoingBatchCanceled_bridge_contract, value) {
			return
		}
	}
	if x.BridgeChainId != "" {
		value := protoreflect.ValueOfString(x.BridgeChainId)
		if !f(fd_EventOutgoingBatchCanceled_bridge_chain_id, value) {
			return
		}
	}
	if x.BatchId != "" {
		value := protoreflect.ValueOfString(x.BatchId)
		if !f(fd_EventOutgoingBatchCanceled_batch_id, value) {
			return
		}
	}
	if x.Nonce != "" {
		value := protoreflect.ValueOfString(x.Nonce)
		if !f(fd_EventOutgoingBatchCanceled_nonce, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventOutgoingBatchCanceled) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "gravity.v1.EventOutgoingBatchCanceled.bridge_contract":
		return x.BridgeContract != ""
	case "gravity.v1.EventOutgoingBatchCanceled.bridge_chain_id":
		return x.BridgeChainId != ""
	case "gravity.v1.EventOutgoingBatchCanceled.batch_id":
		return x.BatchId != ""
	case "gravity.v1.EventOutgoingBatchCanceled.nonce":
		return x.Nonce != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.EventOutgoingBatchCanceled"))
		}
		panic(fmt.Errorf("message gravity.v1.EventOutgoingBatchCanceled does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventOutgoingBatchCanceled) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "gravity.v1.EventOutgoingBatchCanceled.bridge_contract":
		x.BridgeContract = ""
	case "gravity.v1.EventOutgoingBatchCanceled.bridge_chain_id":
		x.BridgeChainId = ""
	case "gravity.v1.EventOutgoingBatchCanceled.batch_id":
		x.BatchId = ""
	case "gravity.v1.EventOutgoingBatchCanceled.nonce":
		x.Nonce = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.EventOutgoingBatchCanceled"))
		}
		panic(fmt.Errorf("message gravity.v1.EventOutgoingBatchCanceled does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventOutgoingBatchCanceled) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "gravity.v1.EventOutgoingBatchCanceled.bridge_contract":
		value := x.BridgeContract
		return protoreflect.ValueOfString(value)
	case "gravity.v1.EventOutgoingBatchCanceled.bridge_chain_id":
		value := x.BridgeChainId
		return protoreflect.ValueOfString(value)
	case "gravity.v1.EventOutgoingBatchCanceled.batch_id":
		value := x.BatchId
		return protoreflect.ValueOfString(value)
	case "gravity.v1.EventOutgoingBatchCanceled.nonce":
		value := x.Nonce
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.EventOutgoingBatchCanceled"))
		}
		panic(fmt.Errorf("message gravity.v1.EventOutgoingBatchCanceled does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventOutgoingBatchCanceled) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "gravity.v1.EventOutgoingBatchCanceled.bridge_contract":
		x.BridgeContract = value.Interface().(string)
	case "gravity.v1.EventOutgoingBatchCanceled.bridge_chain_id":
		x.BridgeChainId = value.Interface().(string)
	case "gravity.v1.EventOutgoingBatchCanceled.batch_id":
		x.BatchId = value.Interface().(string)
	case "gravity.v1.EventOutgoingBatchCanceled.nonce":
		x.Nonce = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.EventOutgoingBatchCanceled"))
		}
		panic(fmt.Errorf("message gravity.v1.EventOutgoingBatchCanceled does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventOutgoingBatchCanceled) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v1.EventOutgoingBatchCanceled.bridge_contract":
		panic(fmt.Errorf("field bridge_contract of message gravity.v1.EventOutgoingBatchCanceled is not mutable"))
	case "gravity.v1.EventOutgoingBatchCanceled.bridge_chain_id":
		panic(fmt.Errorf("field bridge_chain_id of message gravity.v1.EventOutgoingBatchCanceled is not mutable"))
	case "gravity.v1.EventOutgoingBatchCanceled.batch_id":
		panic(fmt.Errorf("field batch_id of message gravity.v1.EventOutgoingBatchCanceled is not mutable"))
	case "gravity.v1.EventOutgoingBatchCanceled.nonce":
		panic(fmt.Errorf("field nonce of message gravity.v1.EventOutgoingBatchCanceled is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.EventOutgoingBatchCanceled"))
		}
		panic(fmt.Errorf("message gravity.v1.EventOutgoingBatchCanceled does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventOutgoingBatchCanceled) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v1.EventOutgoingBatchCanceled.bridge_contract":
		return protoreflect.ValueOfString("")
	case "gravity.v1.EventOutgoingBatchCanceled.bridge_chain_id":
		return protoreflect.ValueOfString("")
	case "gravity.v1.EventOutgoingBatchCanceled.batch_id":
		return protoreflect.ValueOfString("")
	case "gravity.v1.EventOutgoingBatchCanceled.nonce":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.EventOutgoingBatchCanceled"))
		}
		panic(fmt.Errorf("message gravity.v1.EventOutgoingBatchCanceled does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventOutgoingBatchCanceled) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in gravity.v1.EventOutgoingBatchCanceled", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventOutgoingBatchCanceled) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventOutgoingBatchCanceled) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventOutgoingBatchCanceled) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventOutgoingBatchCanceled) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventOutgoingBatchCanceled)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.BridgeContract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BridgeChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BatchId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Nonce)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventOutgoingBatchCanceled)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Nonce) > 0 {
			i -= len(x.Nonce)
			copy(dAtA[i:], x.Nonce)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Nonce)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.BatchId) > 0 {
			i -= len(x.BatchId)
			copy(dAtA[i:], x.BatchId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BatchId)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.BridgeChainId) > 0 {
			i -= len(x.BridgeChainId)
			copy(dAtA[i:], x.BridgeChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgeChainId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.BridgeContract) > 0 {
			i -= len(x.BridgeContract)
			copy(dAtA[i:], x.BridgeContract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgeContract)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventOutgoingBatchCanceled)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventOutgoingBatchCanceled: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventOutgoingBatchCanceled: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgeContract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgeContract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgeChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgeChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BatchId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BatchId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Nonce = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventOutgoingBatch                 protoreflect.MessageDescriptor
	fd_EventOutgoingBatch_bridge_contract protoreflect.FieldDescriptor
	fd_EventOutgoingBatch_bridge_chain_id protoreflect.FieldDescriptor
	fd_EventOutgoingBatch_batch_id        protoreflect.FieldDescriptor
	fd_EventOutgoingBatch_nonce           protoreflect.FieldDescriptor
)

func init() {
	file_gravity_v1_batch_proto_init()
	md_EventOutgoingBatch = File_gravity_v1_batch_proto.Messages().ByName("EventOutgoingBatch")
	fd_EventOutgoingBatch_bridge_contract = md_EventOutgoingBatch.Fields().ByName("bridge_contract")
	fd_EventOutgoingBatch_bridge_chain_id = md_EventOutgoingBatch.Fields().ByName("bridge_chain_id")
	fd_EventOutgoingBatch_batch_id = md_EventOutgoingBatch.Fields().ByName("batch_id")
	fd_EventOutgoingBatch_nonce = md_EventOutgoingBatch.Fields().ByName("nonce")
}

var _ protoreflect.Message = (*fastReflection_EventOutgoingBatch)(nil)

type fastReflection_EventOutgoingBatch EventOutgoingBatch

func (x *EventOutgoingBatch) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventOutgoingBatch)(x)
}

func (x *EventOutgoingBatch) slowProtoReflect() protoreflect.Message {
	mi := &file_gravity_v1_batch_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventOutgoingBatch_messageType fastReflection_EventOutgoingBatch_messageType
var _ protoreflect.MessageType = fastReflection_EventOutgoingBatch_messageType{}

type fastReflection_EventOutgoingBatch_messageType struct{}

func (x fastReflection_EventOutgoingBatch_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventOutgoingBatch)(nil)
}
func (x fastReflection_EventOutgoingBatch_messageType) New() protoreflect.Message {
	return new(fastReflection_EventOutgoingBatch)
}
func (x fastReflection_EventOutgoingBatch_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventOutgoingBatch
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventOutgoingBatch) Descriptor() protoreflect.MessageDescriptor {
	return md_EventOutgoingBatch
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventOutgoingBatch) Type() protoreflect.MessageType {
	return _fastReflection_EventOutgoingBatch_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventOutgoingBatch) New() protoreflect.Message {
	return new(fastReflection_EventOutgoingBatch)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventOutgoingBatch) Interface() protoreflect.ProtoMessage {
	return (*EventOutgoingBatch)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventOutgoingBatch) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BridgeContract != "" {
		value := protoreflect.ValueOfString(x.BridgeContract)
		if !f(fd_EventOutgoingBatch_bridge_contract, value) {
			return
		}
	}
	if x.BridgeChainId != "" {
		value := protoreflect.ValueOfString(x.BridgeChainId)
		if !f(fd_EventOutgoingBatch_bridge_chain_id, value) {
			return
		}
	}
	if x.BatchId != "" {
		value := protoreflect.ValueOfString(x.BatchId)
		if !f(fd_EventOutgoingBatch_batch_id, value) {
			return
		}
	}
	if x.Nonce != "" {
		value := protoreflect.ValueOfString(x.Nonce)
		if !f(fd_EventOutgoingBatch_nonce, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventOutgoingBatch) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "gravity.v1.EventOutgoingBatch.bridge_contract":
		return x.BridgeContract != ""
	case "gravity.v1.EventOutgoingBatch.bridge_chain_id":
		return x.BridgeChainId != ""
	case "gravity.v1.EventOutgoingBatch.batch_id":
		return x.BatchId != ""
	case "gravity.v1.EventOutgoingBatch.nonce":
		return x.Nonce != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.EventOutgoingBatch"))
		}
		panic(fmt.Errorf("message gravity.v1.EventOutgoingBatch does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventOutgoingBatch) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "gravity.v1.EventOutgoingBatch.bridge_contract":
		x.BridgeContract = ""
	case "gravity.v1.EventOutgoingBatch.bridge_chain_id":
		x.BridgeChainId = ""
	case "gravity.v1.EventOutgoingBatch.batch_id":
		x.BatchId = ""
	case "gravity.v1.EventOutgoingBatch.nonce":
		x.Nonce = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.EventOutgoingBatch"))
		}
		panic(fmt.Errorf("message gravity.v1.EventOutgoingBatch does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventOutgoingBatch) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "gravity.v1.EventOutgoingBatch.bridge_contract":
		value := x.BridgeContract
		return protoreflect.ValueOfString(value)
	case "gravity.v1.EventOutgoingBatch.bridge_chain_id":
		value := x.BridgeChainId
		return protoreflect.ValueOfString(value)
	case "gravity.v1.EventOutgoingBatch.batch_id":
		value := x.BatchId
		return protoreflect.ValueOfString(value)
	case "gravity.v1.EventOutgoingBatch.nonce":
		value := x.Nonce
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.EventOutgoingBatch"))
		}
		panic(fmt.Errorf("message gravity.v1.EventOutgoingBatch does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventOutgoingBatch) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "gravity.v1.EventOutgoingBatch.bridge_contract":
		x.BridgeContract = value.Interface().(string)
	case "gravity.v1.EventOutgoingBatch.bridge_chain_id":
		x.BridgeChainId = value.Interface().(string)
	case "gravity.v1.EventOutgoingBatch.batch_id":
		x.BatchId = value.Interface().(string)
	case "gravity.v1.EventOutgoingBatch.nonce":
		x.Nonce = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.EventOutgoingBatch"))
		}
		panic(fmt.Errorf("message gravity.v1.EventOutgoingBatch does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventOutgoingBatch) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v1.EventOutgoingBatch.bridge_contract":
		panic(fmt.Errorf("field bridge_contract of message gravity.v1.EventOutgoingBatch is not mutable"))
	case "gravity.v1.EventOutgoingBatch.bridge_chain_id":
		panic(fmt.Errorf("field bridge_chain_id of message gravity.v1.EventOutgoingBatch is not mutable"))
	case "gravity.v1.EventOutgoingBatch.batch_id":
		panic(fmt.Errorf("field batch_id of message gravity.v1.EventOutgoingBatch is not mutable"))
	case "gravity.v1.EventOutgoingBatch.nonce":
		panic(fmt.Errorf("field nonce of message gravity.v1.EventOutgoingBatch is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.EventOutgoingBatch"))
		}
		panic(fmt.Errorf("message gravity.v1.EventOutgoingBatch does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventOutgoingBatch) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "gravity.v1.EventOutgoingBatch.bridge_contract":
		return protoreflect.ValueOfString("")
	case "gravity.v1.EventOutgoingBatch.bridge_chain_id":
		return protoreflect.ValueOfString("")
	case "gravity.v1.EventOutgoingBatch.batch_id":
		return protoreflect.ValueOfString("")
	case "gravity.v1.EventOutgoingBatch.nonce":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: gravity.v1.EventOutgoingBatch"))
		}
		panic(fmt.Errorf("message gravity.v1.EventOutgoingBatch does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventOutgoingBatch) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in gravity.v1.EventOutgoingBatch", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventOutgoingBatch) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventOutgoingBatch) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventOutgoingBatch) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventOutgoingBatch) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventOutgoingBatch)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.BridgeContract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BridgeChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BatchId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Nonce)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventOutgoingBatch)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Nonce) > 0 {
			i -= len(x.Nonce)
			copy(dAtA[i:], x.Nonce)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Nonce)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.BatchId) > 0 {
			i -= len(x.BatchId)
			copy(dAtA[i:], x.BatchId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BatchId)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.BridgeChainId) > 0 {
			i -= len(x.BridgeChainId)
			copy(dAtA[i:], x.BridgeChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgeChainId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.BridgeContract) > 0 {
			i -= len(x.BridgeContract)
			copy(dAtA[i:], x.BridgeContract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgeContract)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventOutgoingBatch)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventOutgoingBatch: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventOutgoingBatch: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgeContract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgeContract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgeChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgeChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BatchId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BatchId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Nonce = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: gravity/v1/batch.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// OutgoingTxBatch represents a batch of transactions going from gravity to ETH
type OutgoingTxBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchNonce         uint64                `protobuf:"varint,1,opt,name=batch_nonce,json=batchNonce,proto3" json:"batch_nonce,omitempty"`
	BatchTimeout       uint64                `protobuf:"varint,2,opt,name=batch_timeout,json=batchTimeout,proto3" json:"batch_timeout,omitempty"`
	Transactions       []*OutgoingTransferTx `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty"`
	TokenContract      string                `protobuf:"bytes,4,opt,name=token_contract,json=tokenContract,proto3" json:"token_contract,omitempty"`
	CosmosBlockCreated uint64                `protobuf:"varint,5,opt,name=cosmos_block_created,json=cosmosBlockCreated,proto3" json:"cosmos_block_created,omitempty"`
}

func (x *OutgoingTxBatch) Reset() {
	*x = OutgoingTxBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gravity_v1_batch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutgoingTxBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutgoingTxBatch) ProtoMessage() {}

// Deprecated: Use OutgoingTxBatch.ProtoReflect.Descriptor instead.
func (*OutgoingTxBatch) Descriptor() ([]byte, []int) {
	return file_gravity_v1_batch_proto_rawDescGZIP(), []int{0}
}

func (x *OutgoingTxBatch) GetBatchNonce() uint64 {
	if x != nil {
		return x.BatchNonce
	}
	return 0
}

func (x *OutgoingTxBatch) GetBatchTimeout() uint64 {
	if x != nil {
		return x.BatchTimeout
	}
	return 0
}

func (x *OutgoingTxBatch) GetTransactions() []*OutgoingTransferTx {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *OutgoingTxBatch) GetTokenContract() string {
	if x != nil {
		return x.TokenContract
	}
	return ""
}

func (x *OutgoingTxBatch) GetCosmosBlockCreated() uint64 {
	if x != nil {
		return x.CosmosBlockCreated
	}
	return 0
}

// OutgoingTransferTx represents an individual send from gravity to ETH
type OutgoingTransferTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sender      string      `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	DestAddress string      `protobuf:"bytes,3,opt,name=dest_address,json=destAddress,proto3" json:"dest_address,omitempty"`
	Erc20Token  *ERC20Token `protobuf:"bytes,4,opt,name=erc20_token,json=erc20Token,proto3" json:"erc20_token,omitempty"`
	Erc20Fee    *ERC20Token `protobuf:"bytes,5,opt,name=erc20_fee,json=erc20Fee,proto3" json:"erc20_fee,omitempty"`
}

func (x *OutgoingTransferTx) Reset() {
	*x = OutgoingTransferTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gravity_v1_batch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutgoingTransferTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutgoingTransferTx) ProtoMessage() {}

// Deprecated: Use OutgoingTransferTx.ProtoReflect.Descriptor instead.
func (*OutgoingTransferTx) Descriptor() ([]byte, []int) {
	return file_gravity_v1_batch_proto_rawDescGZIP(), []int{1}
}

func (x *OutgoingTransferTx) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OutgoingTransferTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *OutgoingTransferTx) GetDestAddress() string {
	if x != nil {
		return x.DestAddress
	}
	return ""
}

func (x *OutgoingTransferTx) GetErc20Token() *ERC20Token {
	if x != nil {
		return x.Erc20Token
	}
	return nil
}

func (x *OutgoingTransferTx) GetErc20Fee() *ERC20Token {
	if x != nil {
		return x.Erc20Fee
	}
	return nil
}

// OutgoingLogicCall represents an individual logic call from gravity to ETH
type OutgoingLogicCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transfers            []*ERC20Token `protobuf:"bytes,1,rep,name=transfers,proto3" json:"transfers,omitempty"`
	Fees                 []*ERC20Token `protobuf:"bytes,2,rep,name=fees,proto3" json:"fees,omitempty"`
	LogicContractAddress string        `protobuf:"bytes,3,opt,name=logic_contract_address,json=logicContractAddress,proto3" json:"logic_contract_address,omitempty"`
	Payload              []byte        `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	Timeout              uint64        `protobuf:"varint,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	InvalidationId       []byte        `protobuf:"bytes,6,opt,name=invalidation_id,json=invalidationId,proto3" json:"invalidation_id,omitempty"`
	InvalidationNonce    uint64        `protobuf:"varint,7,opt,name=invalidation_nonce,json=invalidationNonce,proto3" json:"invalidation_nonce,omitempty"`
	CosmosBlockCreated   uint64        `protobuf:"varint,8,opt,name=cosmos_block_created,json=cosmosBlockCreated,proto3" json:"cosmos_block_created,omitempty"`
}

func (x *OutgoingLogicCall) Reset() {
	*x = OutgoingLogicCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gravity_v1_batch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutgoingLogicCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutgoingLogicCall) ProtoMessage() {}

// Deprecated: Use OutgoingLogicCall.ProtoReflect.Descriptor instead.
func (*OutgoingLogicCall) Descriptor() ([]byte, []int) {
	return file_gravity_v1_batch_proto_rawDescGZIP(), []int{2}
}

func (x *OutgoingLogicCall) GetTransfers() []*ERC20Token {
	if x != nil {
		return x.Transfers
	}
	return nil
}

func (x *OutgoingLogicCall) GetFees() []*ERC20Token {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *OutgoingLogicCall) GetLogicContractAddress() string {
	if x != nil {
		return x.LogicContractAddress
	}
	return ""
}

func (x *OutgoingLogicCall) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *OutgoingLogicCall) GetTimeout() uint64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *OutgoingLogicCall) GetInvalidationId() []byte {
	if x != nil {
		return x.InvalidationId
	}
	return nil
}

func (x *OutgoingLogicCall) GetInvalidationNonce() uint64 {
	if x != nil {
		return x.InvalidationNonce
	}
	return 0
}

func (x *OutgoingLogicCall) GetCosmosBlockCreated() uint64 {
	if x != nil {
		return x.CosmosBlockCreated
	}
	return 0
}

type EventOutgoingBatchCanceled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BridgeContract string `protobuf:"bytes,1,opt,name=bridge_contract,json=bridgeContract,proto3" json:"bridge_contract,omitempty"`
	BridgeChainId  string `protobuf:"bytes,2,opt,name=bridge_chain_id,json=bridgeChainId,proto3" json:"bridge_chain_id,omitempty"`
	BatchId        string `protobuf:"bytes,3,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Nonce          string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *EventOutgoingBatchCanceled) Reset() {
	*x = EventOutgoingBatchCanceled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gravity_v1_batch_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventOutgoingBatchCanceled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOutgoingBatchCanceled) ProtoMessage() {}

// Deprecated: Use EventOutgoingBatchCanceled.ProtoReflect.Descriptor instead.
func (*EventOutgoingBatchCanceled) Descriptor() ([]byte, []int) {
	return file_gravity_v1_batch_proto_rawDescGZIP(), []int{3}
}

func (x *EventOutgoingBatchCanceled) GetBridgeContract() string {
	if x != nil {
		return x.BridgeContract
	}
	return ""
}

func (x *EventOutgoingBatchCanceled) GetBridgeChainId() string {
	if x != nil {
		return x.BridgeChainId
	}
	return ""
}

func (x *EventOutgoingBatchCanceled) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *EventOutgoingBatchCanceled) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type EventOutgoingBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BridgeContract string `protobuf:"bytes,1,opt,name=bridge_contract,json=bridgeContract,proto3" json:"bridge_contract,omitempty"`
	BridgeChainId  string `protobuf:"bytes,2,opt,name=bridge_chain_id,json=bridgeChainId,proto3" json:"bridge_chain_id,omitempty"`
	BatchId        string `protobuf:"bytes,3,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Nonce          string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *EventOutgoingBatch) Reset() {
	*x = EventOutgoingBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gravity_v1_batch_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventOutgoingBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOutgoingBatch) ProtoMessage() {}

// Deprecated: Use EventOutgoingBatch.ProtoReflect.Descriptor instead.
func (*EventOutgoingBatch) Descriptor() ([]byte, []int) {
	return file_gravity_v1_batch_proto_rawDescGZIP(), []int{4}
}

func (x *EventOutgoingBatch) GetBridgeContract() string {
	if x != nil {
		return x.BridgeContract
	}
	return ""
}

func (x *EventOutgoingBatch) GetBridgeChainId() string {
	if x != nil {
		return x.BridgeChainId
	}
	return ""
}

func (x *EventOutgoingBatch) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *EventOutgoingBatch) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

var File_gravity_v1_batch_proto protoreflect.FileDescriptor

var file_gravity_v1_batch_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x72, 0x61, 0x76,
	0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfa, 0x01, 0x0a, 0x0f, 0x4f, 0x75, 0x74,
	0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x12, 0x48, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x78, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x12, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0xd9, 0x01, 0x0a, 0x12, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69,
	0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x78, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3d, 0x0a, 0x0b, 0x65, 0x72, 0x63, 0x32, 0x30,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0a, 0x65, 0x72, 0x63, 0x32,
	0x30, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x39, 0x0a, 0x09, 0x65, 0x72, 0x63, 0x32, 0x30, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x61, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x08, 0x65, 0x72, 0x63, 0x32, 0x30, 0x46, 0x65,
	0x65, 0x22, 0xf5, 0x02, 0x0a, 0x11, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x4c, 0x6f,
	0x67, 0x69, 0x63, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x3a, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x61,
	0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x1a, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x42, 0x8c, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x72, 0x61, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x25, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e,
	0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76,
	0x31, 0x3b, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x47, 0x58,
	0x58, 0xaa, 0x02, 0x0a, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0a, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16, 0x47, 0x72,
	0x61, 0x76, 0x69, 0x74, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0b, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gravity_v1_batch_proto_rawDescOnce sync.Once
	file_gravity_v1_batch_proto_rawDescData = file_gravity_v1_batch_proto_rawDesc
)

func file_gravity_v1_batch_proto_rawDescGZIP() []byte {
	file_gravity_v1_batch_proto_rawDescOnce.Do(func() {
		file_gravity_v1_batch_proto_rawDescData = protoimpl.X.CompressGZIP(file_gravity_v1_batch_proto_rawDescData)
	})
	return file_gravity_v1_batch_proto_rawDescData
}

var file_gravity_v1_batch_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_gravity_v1_batch_proto_goTypes = []interface{}{
	(*OutgoingTxBatch)(nil),            // 0: gravity.v1.OutgoingTxBatch
	(*OutgoingTransferTx)(nil),         // 1: gravity.v1.OutgoingTransferTx
	(*OutgoingLogicCall)(nil),          // 2: gravity.v1.OutgoingLogicCall
	(*EventOutgoingBatchCanceled)(nil), // 3: gravity.v1.EventOutgoingBatchCanceled
	(*EventOutgoingBatch)(nil),         // 4: gravity.v1.EventOutgoingBatch
	(*ERC20Token)(nil),                 // 5: gravity.v1.ERC20Token
}
var file_gravity_v1_batch_proto_depIdxs = []int32{
	1, // 0: gravity.v1.OutgoingTxBatch.transactions:type_name -> gravity.v1.OutgoingTransferTx
	5, // 1: gravity.v1.OutgoingTransferTx.erc20_token:type_name -> gravity.v1.ERC20Token
	5, // 2: gravity.v1.OutgoingTransferTx.erc20_fee:type_name -> gravity.v1.ERC20Token
	5, // 3: gravity.v1.OutgoingLogicCall.transfers:type_name -> gravity.v1.ERC20Token
	5, // 4: gravity.v1.OutgoingLogicCall.fees:type_name -> gravity.v1.ERC20Token
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_gravity_v1_batch_proto_init() }
func file_gravity_v1_batch_proto_init() {
	if File_gravity_v1_batch_proto != nil {
		return
	}
	file_gravity_v1_attestation_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gravity_v1_batch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutgoingTxBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gravity_v1_batch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutgoingTransferTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gravity_v1_batch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutgoingLogicCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gravity_v1_batch_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventOutgoingBatchCanceled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gravity_v1_batch_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventOutgoingBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gravity_v1_batch_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gravity_v1_batch_proto_goTypes,
		DependencyIndexes: file_gravity_v1_batch_proto_depIdxs,
		MessageInfos:      file_gravity_v1_batch_proto_msgTypes,
	}.Build()
	File_gravity_v1_batch_proto = out.File
	file_gravity_v1_batch_proto_rawDesc = nil
	file_gravity_v1_batch_proto_goTypes = nil
	file_gravity_v1_batch_proto_depIdxs = nil
}
